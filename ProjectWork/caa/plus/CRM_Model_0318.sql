
CREATE SET  TABLE TMCI997_ESP_OUTBOUND
(

	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	AD_EMAIL_FULL        CHAR(50) NOT NULL 
		TITLE 'AD_EMAIL_FULL',
	CD_EMAIL_SRCE_INITIAL CHAR(7) NULL 
		TITLE 'CD_EMAIL_SRCE_INITIAL',
	CD_EMAIL_SRCE_RECENT CHAR(7) NULL 
		TITLE 'CD_EMAIL_SRCE_RECENT',
	NA_FIRST             CHAR(25) NULL 
		TITLE 'NA_FIRST',
	NA_LAST              CHAR(25) NULL 
		TITLE 'NA_LAST',
	CD_STATE             CHAR(2) NULL 
		TITLE 'CD_STATE',
	CD_POSTAL            CHAR(6) NULL 
		TITLE 'CD_POSTAL',
	NU_BIRTH_MONTH       BYTEINT NULL 
		TITLE 'NU_BIRTH_MONTH',
	CD_PLCC_STATUS_LB    CHAR(4) NULL 
		TITLE 'CD_PLCC_STATUS_LB',
	CD_PLCC_STATUS_CA    CHAR(4) NULL 
		TITLE 'CD_PLCC_STATUS_CA',
	CD_PLCC_STATUS_FB    CHAR(4) NULL 
		TITLE 'CD_PLCC_STATUS_FB',
	DA_PREMIER_EXP_FB    DATE NOT NULL 
		TITLE 'DA_PREMIER_EXP_FB',
	FL_PERK_STATUS       CHAR(1) NOT NULL 
		TITLE 'FL_PERK_STATUS',
	DA_PERK_EXP_CA       DATE NOT NULL 
		TITLE 'DA_PERK_EXP_CA',
	FL_OPT_IN_EM_LB      CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_EM_LB',
	FL_OPT_IN_EM_LBO     CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_EM_LBO',
	FL_OPT_IN_EM_CA      CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_EM_CA',
	FL_OPT_IN_EM_SONSI   CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_EM_SONSI',
	FL_OPT_IN_EM_FB      CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_EM_FB',
	FL_OPT_IN_DM         CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_DM',
	FL_OPT_IN_PA         CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_PA',
	FL_OPT_IN_TD         CHAR(1) NOT NULL 
		TITLE 'FL_OPT_IN_TD',
	ID_STORE_NEAR_ANY_CH SMALLINT NULL 
		TITLE 'ID_STORE_NEAR_ANY_CH',
	NU_DIST_NEAR_ANY_CH  DECIMAL(12,3) NULL 
		TITLE 'NU_DIST_NEAR_ANY_CH',
	ID_STORE_NEAR_THIS_CH SMALLINT NULL 
		TITLE 'ID_STORE_NEAR_THIS_CH',
	NU_DIST_NEAR_THIS_CH DECIMAL(12,3) NULL 
		TITLE 'NU_DIST_NEAR_THIS_CH',
	FL_EMPLOYEE          CHAR(1) NOT NULL 
		TITLE 'FL_EMPLOYEE',
	FL_CUST_INTERNATIONAL CHAR(1) NOT NULL 
		TITLE 'FL_CUST_INTERNATIONAL',
	ID_STORE_LOYALTY     SMALLINT NULL 
		TITLE 'ID_STORE_LOYALTY',
	DA_EM_OPT_IN_1ST     DATE NOT NULL 
		TITLE 'DA_EM_OPT_IN_1ST',
	CD_LIFE_CYCLE        CHAR(7) NULL 
		TITLE 'CD_LIFE_CYCLE',
	CD_CUST_SEGMENT      CHAR(7) NULL 
		TITLE 'CD_CUST_SEGMENT',
	DA_ECOMM_1ST_PURCH   DATE NOT NULL 
		TITLE 'DA_ECOMM_1ST_PURCH',
	DA_STORE_1ST_PURCH   DATE NOT NULL 
		TITLE 'DA_STORE_1ST_PURCH',
	DA_1ST_PURCH         DATE NOT NULL 
		TITLE 'DA_1ST_PURCH',
	DA_ECOMM_LAST_PURCH  DATE NOT NULL 
		TITLE 'DA_ECOMM_LAST_PURCH',
	DA_STORE_LAST_PURCH  DATE NOT NULL 
		TITLE 'DA_STORE_LAST_PURCH',
	DA_CREDIT_LAST_PURCH DATE NOT NULL 
		TITLE 'DA_CREDIT_LAST_PURCH',
	PC_STORE_REV_12M     DECIMAL(8,2) NULL 
		TITLE 'PC_STORE_REV_12M',
	AM_SALES_NET_12M     DECIMAL(8,2) NULL 
		TITLE 'AM_SALES_NET_12M',
	AM_MARGIN_NET_12M    DECIMAL(8,2) NULL 
		TITLE 'AM_MARGIN_NET_12M',
	QU_TXNS_NET_12M      INTEGER NULL 
		TITLE 'QU_TXNS_NET_12M',
	PC_MARGIN_12M        DECIMAL(8,2) NULL 
		TITLE 'PC_MARGIN_12M',
	FL_PETITE_BUYER      CHAR(1) NOT NULL 
		TITLE 'FL_PETITE_BUYER',
	FL_TALLS_BUYER       CHAR(1) NOT NULL 
		TITLE 'FL_TALLS_BUYER',
	ID_SIZE_TOPS         SMALLINT NULL 
		TITLE 'ID_SIZE_TOPS',
	ID_SIZE_BOTTOMS      SMALLINT NULL 
		TITLE 'ID_SIZE_BOTTOMS',
	ID_SIZE_SHOES        SMALLINT NULL 
		TITLE 'ID_SIZE_SHOES',
	ID_SIZE_DRESS        SMALLINT NULL 
		TITLE 'ID_SIZE_DRESS',
	ID_SIZE_BRA          SMALLINT NULL 
		TITLE 'ID_SIZE_BRA',
	PC_CLEARANCE_3M      DECIMAL(6,2) NULL 
		TITLE 'PC_CLEARANCE_3M',
	FL_CLEARANCE_BUYER_13M CHAR(1) NOT NULL 
		TITLE 'FL_CLEARANCE_BUYER_13M',
	DA_LAST_PURCH_ACRS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_ACRS_24M',
	DA_LAST_PURCH_ACTIVE_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_ACTIVE_24M',
	DA_LAST_PURCH_BRA_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_BRA_24M',
	DA_LAST_PURCH_CASUAL_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_CASUAL_24M',
	DA_LAST_PURCH_DENIM_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_DENIM_24M',
	DA_LAST_PURCH_DRESS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_DRESS_24M',
	DA_LAST_PURCH_KNITS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_KNITS_24M',
	DA_LAST_PURCH_HOSRY_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_HOSRY_24M',
	DA_LAST_PURCH_JEWLRY_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_JEWLRY_24M',
	DA_LAST_PURCH_OUTERWR_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_OUTERWR_24M',
	DA_LAST_PURCH_PANTIES_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_PANTIES_24M',
	DA_LAST_PURCH_SHAPEWR_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SHAPEWR_24M',
	DA_LAST_PURCH_SHOES_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SHOES_24M',
	DA_LAST_PURCH_SLEEPWR_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SLEEPWR_24M',
	DA_LAST_PURCH_SPANX_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SPANX_24M',
	DA_LAST_PURCH_SWEATER_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SWEATER_24M',
	DA_LAST_PURCH_SWIMWEAR_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SWIMWEAR_24M',
	DA_LAST_PURCH_WTW_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_WTW_24M',
	DA_LAST_PURCH_WMN_TOPS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_WMN_TOPS_24M',
	DA_LAST_PURCH_BTTMS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_BTTMS_24M',
	DA_LAST_PURCH_INNERWR_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_INNERWR_24M',
	DA_LAST_PURCH_COATS_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_COATS_24M',
	DA_LAST_PURCH_SOCIAL_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_SOCIAL_24M',
	DA_LAST_PURCH_MISC_24M DATE NOT NULL 
		TITLE 'DA_LAST_PURCH_MISC_24M',
	DA_LAST_OPEN         DATE NOT NULL 
		TITLE 'DA_LAST_OPEN',
	DA_LAST_CLICKED      DATE NOT NULL 
		TITLE 'DA_LAST_CLICKED',
	DA_TMCI997_CREATED   TIMESTAMP(6) NOT NULL  DEFAULT CURRENT_TIMESTAMP(6)
		TITLE 'DA_TMCI997_CREATED',
	DA_TMCI997_UPDATED   TIMESTAMP(6) NOT NULL  DEFAULT CURRENT_TIMESTAMP(6)
		TITLE 'DA_TMCI997_UPDATED',
	DA_EM_OPT_IN_LAST    DATE NOT NULL  DEFAULT DATE'1900-01-01'
		TITLE 'DA_EM_OPT_IN_LAST'
)
	 UNIQUE PRIMARY INDEX 
	 (
			ID_CHAIN,
			ID_EMAIL
	 );

ALTER TABLE TMCI997_ESP_OUTBOUND
	ADD CONSTRAINT XPKTMCI997_ESP_OUTBOUND PRIMARY KEY (ID_CHAIN,ID_EMAIL,ID_CUST);

CREATE  TABLE VMCI015_CUST_CCARD
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	ID_ACCOUNT           DECIMAL(20,0) NOT NULL 
		TITLE 'ID_ACCOUNT',
	CD_BANK_CARD_TYPE    CHAR(2) NULL 
		TITLE 'CD_BANK_CARD_TYPE',
	IN_BANK_CARD_SRCE    CHAR(2) NULL 
		TITLE 'IN_BANK_CARD_SRCE',
	DA_BANK_CARD_ADDED   DATE NULL 
		TITLE 'DA_BANK_CARD_ADDED',
	IN_FB_ACCT_TYPE      CHAR(1) NULL 
		TITLE 'IN_FB_ACCT_TYPE',
	FL_ACCOUNT_CLOSED    CHAR(1) NULL 
		TITLE 'FL_ACCOUNT_CLOSED',
	FL_ACCOUNT_ACTIVE    CHAR(1) NULL 
		TITLE 'FL_ACCOUNT_ACTIVE',
	CD_ACCOUNT_TERM      CHAR(1) NULL 
		TITLE 'CD_ACCOUNT_TERM',
	DA_APPLY_HOUSCARD    DATE NULL 
		TITLE 'DA_APPLY_HOUSCARD',
	IN_CUST_SOURCE_2ND   CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND',
	CD_BNK_CRD_SUBTYPE   CHAR(2) NULL 
		TITLE 'CD_BNK_CRD_SUBTYPE',
	DA_CARD_ISSUED       DATE NULL 
		TITLE 'DA_CARD_ISSUED',
	CD_CCARD_PROCESS_STATUS CHAR(1) NOT NULL 
		TITLE 'CD_CCARD_PROCESS_STATUS',
	DA_TMCI015_ROW_UPDATED DATE NULL 
		TITLE 'DA_TMCI015_ROW_UPDATED',
	ID_ACCOUNT_PREFIX    INTEGER NULL 
		TITLE 'ID_ACCOUNT_PREFIX',
	ID_ACCOUNT_SUFFIX    SMALLINT NULL 
		TITLE 'ID_ACCOUNT_SUFFIX'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI015_CUST_CCARD
	ADD CONSTRAINT XPKVMCI015_CUST_CCARD PRIMARY KEY (ID_CUST,ID_ACCOUNT,CD_CCARD_PROCESS_STATUS);

CREATE  TABLE VMCI016_CCARD_TYPE
(

	CD_BANK_CARD_TYPE    CHAR(2) NOT NULL 
		TITLE 'CD_BANK_CARD_TYPE',
	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	TX_BANK_CARD_TYPE    CHAR(75) NULL 
		TITLE 'TX_BANK_CARD_TYPE',
	FL_HOUSECARD         CHAR(1) NULL 
		TITLE 'FL_HOUSECARD',
	FL_COBRAND           CHAR(1) NULL 
		TITLE 'FL_COBRAND',
	FL_UPDT_HC_ACT       CHAR(1) NULL 
		TITLE 'FL_UPDT_HC_ACT',
	FL_UPDT_CO_ACT       CHAR(1) NULL 
		TITLE 'FL_UPDT_CO_ACT',
	FL_UPDT_HC_CLS       CHAR(1) NULL 
		TITLE 'FL_UPDT_HC_CLS',
	FL_UPDT_CO_CLS       CHAR(1) NULL 
		TITLE 'FL_UPDT_CO_CLS',
	FL_UPDT_HC_DNP       CHAR(1) NULL 
		TITLE 'FL_UPDT_HC_DNP',
	FL_UPDT_CO_DNP       CHAR(1) NULL 
		TITLE 'FL_UPDT_CO_DNP',
	FL_POPULATE_TMCI115  CHAR(1) NULL 
		TITLE 'FL_POPULATE_TMCI115',
	FL_APPLY_ACCOUNT_TERM CHAR(1) NULL 
		TITLE 'FL_APPLY_ACCOUNT_TERM',
	FL_OUTBOUND          CHAR(1) NULL 
		TITLE 'FL_OUTBOUND',
	CD_PARENT_TYPE       CHAR(2) NULL 
		TITLE 'CD_PARENT_TYPE',
	CD_CTYPE_PROCESS_STATUS CHAR(1) NULL 
		TITLE 'CD_CTYPE_PROCESS_STATUS',
	FL_FOREIGN_KEY       CHAR(1) NULL 
		TITLE 'FL_FOREIGN_KEY',
	FL_HORIZON_SCORE     CHAR(1) NULL 
		TITLE 'FL_HORIZON_SCORE'
)
	PRIMARY INDEX 
	 (
			CD_BANK_CARD_TYPE
	 );

ALTER TABLE VMCI016_CCARD_TYPE
	ADD CONSTRAINT XPKVMCI016_CCARD_TYPE PRIMARY KEY (CD_BANK_CARD_TYPE,ID_CHAIN);

CREATE  TABLE VMCI019_CUSTOMER
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	IN_CUST_SOURCE_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_FIRST',
	IN_CUST_SOURCE_2ND_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_FIRST',
	IN_CUST_SOURCE_LAST  CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_LAST',
	IN_CUST_SOURCE_2ND_LAST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_LAST',
	ID_HOUSEHOLD         INTEGER NULL 
		TITLE 'ID_HOUSEHOLD',
	ID_ADDRESS           INTEGER NULL 
		TITLE 'ID_ADDRESS',
	NA_PREFIX            CHAR(13) NULL 
		TITLE 'NA_PREFIX',
	NA_FIRST             CHAR(25) NULL 
		TITLE 'NA_FIRST',
	NA_MIDDLE            CHAR(25) NULL 
		TITLE 'NA_MIDDLE',
	NA_LAST              CHAR(50) NULL 
		TITLE 'NA_LAST',
	NA_SUFFIX            CHAR(13) NULL 
		TITLE 'NA_SUFFIX',
	NA_GENERATION        CHAR(13) NULL 
		TITLE 'NA_GENERATION',
	AD_TYPE              CHAR(1) NULL 
		TITLE 'AD_TYPE',
	AD_HOUSE_NUMBER      CHAR(10) NULL 
		TITLE 'AD_HOUSE_NUMBER',
	AD_STRT_PRE_DIR      CHAR(4) NULL 
		TITLE 'AD_STRT_PRE_DIR',
	AD_STRT_NAME         CHAR(28) NULL 
		TITLE 'AD_STRT_NAME',
	AD_STRT_SUFF_TYP     CHAR(5) NULL 
		TITLE 'AD_STRT_SUFF_TYP',
	AD_STRT_SUFF_DIR     CHAR(3) NULL 
		TITLE 'AD_STRT_SUFF_DIR',
	AD_UNIT_VALUE        CHAR(10) NULL 
		TITLE 'AD_UNIT_VALUE',
	AD_RURAL_TYP         CHAR(3) NULL 
		TITLE 'AD_RURAL_TYP',
	AD_RURAL_NUM         CHAR(3) NULL 
		TITLE 'AD_RURAL_NUM',
	AD_BOX_NUM           CHAR(10) NULL 
		TITLE 'AD_BOX_NUM',
	AD_PMB_NUM           CHAR(10) NULL 
		TITLE 'AD_PMB_NUM',
	AD_ADDTLINFO         CHAR(50) NULL 
		TITLE 'AD_ADDTLINFO',
	AD_STRT_PRIMARY      VARCHAR(50) NULL 
		TITLE 'AD_STRT_PRIMARY',
	AD_STRT_SECONDARY    CHAR(30) NULL 
		TITLE 'AD_STRT_SECONDARY',
	AD_URBANIZATION      CHAR(28) NULL 
		TITLE 'AD_URBANIZATION',
	NA_CITY              CHAR(30) NULL 
		TITLE 'NA_CITY',
	CD_STATE             CHAR(2) NULL 
		TITLE 'CD_STATE',
	ZC_ZIP_5             INTEGER NULL 
		TITLE 'ZC_ZIP_5',
	ZC_ZIP_4             SMALLINT NULL 
		TITLE 'ZC_ZIP_4',
	CD_POSTAL            CHAR(6) NULL 
		TITLE 'CD_POSTAL',
	NA_COUNTRY           CHAR(20) NULL 
		TITLE 'NA_COUNTRY',
	IN_RC_SOURCE         CHAR(1) NULL 
		TITLE 'IN_RC_SOURCE',
	IN_AQ_HIGH_RISE_RC   CHAR(1) NULL 
		TITLE 'IN_AQ_HIGH_RISE_RC',
	IN_AQ_FIRM_RC        CHAR(1) NULL 
		TITLE 'IN_AQ_FIRM_RC',
	CD_AQ_GENERAL_RC     CHAR(1) NULL 
		TITLE 'CD_AQ_GENERAL_RC',
	CD_AQ_FIRM_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_FIRM_RC',
	CD_AQ_STRT_DIR_RC    CHAR(1) NULL 
		TITLE 'CD_AQ_STRT_DIR_RC',
	CD_AQ_STRT_SUFF_RC   CHAR(1) NULL 
		TITLE 'CD_AQ_STRT_SUFF_RC',
	CD_AQ_APT_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_APT_RC',
	CD_AQ_STREET_NM_RC   CHAR(1) NULL 
		TITLE 'CD_AQ_STREET_NM_RC',
	CD_AQ_TRAILING_DIR_RC CHAR(1) NULL 
		TITLE 'CD_AQ_TRAILING_DIR_RC',
	CD_AQ_POB_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_POB_RC',
	CD_AQ_RRHC_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_RRHC_RC',
	CD_AQ_CITY_ST_RC     CHAR(1) NULL 
		TITLE 'CD_AQ_CITY_ST_RC',
	CD_AQ_STATE_PROV_RC  CHAR(1) NULL 
		TITLE 'CD_AQ_STATE_PROV_RC',
	CD_AQ_ZIP5_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_ZIP5_RC',
	CD_AQ_ZIP4_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_ZIP4_RC',
	CD_AQ_ZIPOUT_RC      CHAR(1) NULL 
		TITLE 'CD_AQ_ZIPOUT_RC',
	CD_AQ_DSF_LIST_RC    VARCHAR(100) NULL 
		TITLE 'CD_AQ_DSF_LIST_RC',
	CD_AQ_ADDR_CORRECT_RC CHAR(1) NULL 
		TITLE 'CD_AQ_ADDR_CORRECT_RC',
	CD_AQ_OVERALL_CORRECT_RC CHAR(1) NULL 
		TITLE 'CD_AQ_OVERALL_CORRECT_RC',
	CD_AQ_CDQP_CONFIDENCE_RC CHAR(3) NULL 
		TITLE 'CD_AQ_CDQP_CONFIDENCE_RC',
	CD_AQ_DPV_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_DPV_RC',
	FL_AQ_DPV_RC         CHAR(1) NULL 
		TITLE 'FL_AQ_DPV_RC',
	CD_AQ_DPV_FOOTNOTE_LIST_RC VARCHAR(20) NULL 
		TITLE 'CD_AQ_DPV_FOOTNOTE_LIST_RC',
	FL_AQ_DPV_CMRA_RC    CHAR(1) NULL 
		TITLE 'FL_AQ_DPV_CMRA_RC',
	CD_AQ_LACS_RC        CHAR(2) NULL 
		TITLE 'CD_AQ_LACS_RC',
	IN_AQ_LACS_RC        CHAR(1) NULL 
		TITLE 'IN_AQ_LACS_RC',
	IN_VM_NCOA_MATCH_RC  CHAR(1) NULL 
		TITLE 'IN_VM_NCOA_MATCH_RC',
	CD_VM_NCOA_FOOTNOTE_RC CHAR(2) NULL 
		TITLE 'CD_VM_NCOA_FOOTNOTE_RC',
	CD_VM_NCOA_FWD_TYPE_RC CHAR(1) NULL 
		TITLE 'CD_VM_NCOA_FWD_TYPE_RC',
	FL_VM_NCOA_FWD_RC    CHAR(1) NULL 
		TITLE 'FL_VM_NCOA_FWD_RC',
	CD_NCOA_NIX_ACTION   CHAR(1) NULL 
		TITLE 'CD_NCOA_NIX_ACTION',
	CD_NCOA_ZIP_CORRCT   CHAR(1) NULL 
		TITLE 'CD_NCOA_ZIP_CORRCT',
	CD_NCOA_COA_INDEX    CHAR(1) NULL 
		TITLE 'CD_NCOA_COA_INDEX',
	CD_NCOA_ADDR_TYPE    CHAR(1) NULL 
		TITLE 'CD_NCOA_ADDR_TYPE',
	CD_NCOA_MATCH        CHAR(2) NULL 
		TITLE 'CD_NCOA_MATCH',
	ID_NCOA_VENDOR       CHAR(2) NULL 
		TITLE 'ID_NCOA_VENDOR',
	DA_CUST_ADDED        DATE NULL 
		TITLE 'DA_CUST_ADDED',
	DA_BIRTH             DATE NULL 
		TITLE 'DA_BIRTH',
	FL_DECEASED          CHAR(1) NULL 
		TITLE 'FL_DECEASED',
	FL_TP_CARDHOLDER     CHAR(1) NULL 
		TITLE 'FL_TP_CARDHOLDER',
	DA_CUST_MODIFIED     DATE NULL 
		TITLE 'DA_CUST_MODIFIED',
	IN_ADDR_RELIABLE     CHAR(2) NULL 
		TITLE 'IN_ADDR_RELIABLE',
	NA_ALT_FIRST         CHAR(14) NULL 
		TITLE 'NA_ALT_FIRST',
	IN_GENDER            CHAR(1) NULL 
		TITLE 'IN_GENDER',
	IN_ALT_GENDER        CHAR(1) NULL 
		TITLE 'IN_ALT_GENDER',
	ID_CARRIER_RTE       CHAR(4) NULL 
		TITLE 'ID_CARRIER_RTE',
	ID_DPBC              SMALLINT NULL 
		TITLE 'ID_DPBC',
	ID_ELOT              CHAR(5) NULL 
		TITLE 'ID_ELOT',
	DA_MOVED             DATE NULL 
		TITLE 'DA_MOVED',
	CD_CHAIN_REF         SMALLINT NULL 
		TITLE 'CD_CHAIN_REF',
	NU_PRIORITY          SMALLINT NULL 
		TITLE 'NU_PRIORITY',
	FL_DMA_DONT_MAIL     CHAR(1) NULL 
		TITLE 'FL_DMA_DONT_MAIL',
	FL_DMA_DONT_CALL     CHAR(1) NULL 
		TITLE 'FL_DMA_DONT_CALL',
	DA_CUST_VERIFIED     DATE NULL 
		TITLE 'DA_CUST_VERIFIED',
	ID_HYG_HOUSEHOLD     BIGINT NULL 
		TITLE 'ID_HYG_HOUSEHOLD',
	ID_CHAIN             BYTEINT NULL 
		TITLE 'ID_CHAIN'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI019_CUSTOMER
	ADD CONSTRAINT XPKVMCI019_CUSTOMER PRIMARY KEY (ID_CUST);

CREATE  TABLE VMCI019_CUSTONLY
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	IN_CUST_SOURCE_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_FIRST',
	IN_CUST_SOURCE_2ND_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_FIRST',
	IN_CUST_SOURCE_LAST  CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_LAST',
	IN_CUST_SOURCE_2ND_LAST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_LAST',
	ID_HOUSEHOLD         INTEGER NULL 
		TITLE 'ID_HOUSEHOLD',
	ID_ADDRESS           INTEGER NULL 
		TITLE 'ID_ADDRESS',
	NA_PREFIX            CHAR(13) NULL 
		TITLE 'NA_PREFIX',
	NA_FIRST             CHAR(25) NULL 
		TITLE 'NA_FIRST',
	NA_MIDDLE            CHAR(25) NULL 
		TITLE 'NA_MIDDLE',
	NA_LAST              CHAR(50) NULL 
		TITLE 'NA_LAST',
	NA_SUFFIX            CHAR(13) NULL 
		TITLE 'NA_SUFFIX',
	NA_GENERATION        CHAR(13) NULL 
		TITLE 'NA_GENERATION',
	AD_TYPE              CHAR(1) NULL 
		TITLE 'AD_TYPE',
	AD_HOUSE_NUMBER      CHAR(10) NULL 
		TITLE 'AD_HOUSE_NUMBER',
	AD_STRT_PRE_DIR      CHAR(4) NULL 
		TITLE 'AD_STRT_PRE_DIR',
	AD_STRT_NAME         CHAR(28) NULL 
		TITLE 'AD_STRT_NAME',
	AD_STRT_SUFF_TYP     CHAR(5) NULL 
		TITLE 'AD_STRT_SUFF_TYP',
	AD_STRT_SUFF_DIR     CHAR(3) NULL 
		TITLE 'AD_STRT_SUFF_DIR',
	AD_UNIT_VALUE        CHAR(10) NULL 
		TITLE 'AD_UNIT_VALUE',
	AD_RURAL_TYP         CHAR(3) NULL 
		TITLE 'AD_RURAL_TYP',
	AD_RURAL_NUM         CHAR(3) NULL 
		TITLE 'AD_RURAL_NUM',
	AD_BOX_NUM           CHAR(10) NULL 
		TITLE 'AD_BOX_NUM',
	AD_PMB_NUM           CHAR(10) NULL 
		TITLE 'AD_PMB_NUM',
	AD_ADDTLINFO         CHAR(50) NULL 
		TITLE 'AD_ADDTLINFO',
	AD_STRT_PRIMARY      VARCHAR(50) NULL 
		TITLE 'AD_STRT_PRIMARY',
	AD_STRT_SECONDARY    CHAR(30) NULL 
		TITLE 'AD_STRT_SECONDARY',
	AD_URBANIZATION      CHAR(28) NULL 
		TITLE 'AD_URBANIZATION',
	NA_CITY              CHAR(30) NULL 
		TITLE 'NA_CITY',
	CD_STATE             CHAR(2) NULL 
		TITLE 'CD_STATE',
	ZC_ZIP_5             INTEGER NULL 
		TITLE 'ZC_ZIP_5',
	ZC_ZIP_4             SMALLINT NULL 
		TITLE 'ZC_ZIP_4',
	CD_POSTAL            CHAR(6) NULL 
		TITLE 'CD_POSTAL',
	NA_COUNTRY           CHAR(20) NULL 
		TITLE 'NA_COUNTRY',
	CD_COUNTRY           CHAR(2) NULL 
		TITLE 'CD_COUNTRY',
	IN_RC_SOURCE         CHAR(1) NULL 
		TITLE 'IN_RC_SOURCE',
	IN_AQ_HIGH_RISE_RC   CHAR(1) NULL 
		TITLE 'IN_AQ_HIGH_RISE_RC',
	IN_AQ_FIRM_RC        CHAR(1) NULL 
		TITLE 'IN_AQ_FIRM_RC',
	CD_AQ_GENERAL_RC     CHAR(1) NULL 
		TITLE 'CD_AQ_GENERAL_RC',
	CD_AQ_FIRM_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_FIRM_RC',
	CD_AQ_STRT_DIR_RC    CHAR(1) NULL 
		TITLE 'CD_AQ_STRT_DIR_RC',
	CD_AQ_STRT_SUFF_RC   CHAR(1) NULL 
		TITLE 'CD_AQ_STRT_SUFF_RC',
	CD_AQ_APT_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_APT_RC',
	CD_AQ_STREET_NM_RC   CHAR(1) NULL 
		TITLE 'CD_AQ_STREET_NM_RC',
	CD_AQ_TRAILING_DIR_RC CHAR(1) NULL 
		TITLE 'CD_AQ_TRAILING_DIR_RC',
	CD_AQ_POB_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_POB_RC',
	CD_AQ_RRHC_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_RRHC_RC',
	CD_AQ_CITY_ST_RC     CHAR(1) NULL 
		TITLE 'CD_AQ_CITY_ST_RC',
	CD_AQ_STATE_PROV_RC  CHAR(1) NULL 
		TITLE 'CD_AQ_STATE_PROV_RC',
	CD_AQ_ZIP5_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_ZIP5_RC',
	CD_AQ_ZIP4_RC        CHAR(1) NULL 
		TITLE 'CD_AQ_ZIP4_RC',
	CD_AQ_ZIPOUT_RC      CHAR(1) NULL 
		TITLE 'CD_AQ_ZIPOUT_RC',
	CD_AQ_DSF_LIST_RC    VARCHAR(100) NULL 
		TITLE 'CD_AQ_DSF_LIST_RC',
	CD_AQ_ADDR_CORRECT_RC CHAR(1) NULL 
		TITLE 'CD_AQ_ADDR_CORRECT_RC',
	CD_AQ_OVERALL_CORRECT_RC CHAR(1) NULL 
		TITLE 'CD_AQ_OVERALL_CORRECT_RC',
	CD_AQ_CDQP_CONFIDENCE_RC CHAR(3) NULL 
		TITLE 'CD_AQ_CDQP_CONFIDENCE_RC',
	CD_AQ_DPV_RC         CHAR(1) NULL 
		TITLE 'CD_AQ_DPV_RC',
	FL_AQ_DPV_RC         CHAR(1) NULL 
		TITLE 'FL_AQ_DPV_RC',
	CD_AQ_DPV_FOOTNOTE_LIST_RC VARCHAR(20) NULL 
		TITLE 'CD_AQ_DPV_FOOTNOTE_LIST_RC',
	FL_AQ_DPV_CMRA_RC    CHAR(1) NULL 
		TITLE 'FL_AQ_DPV_CMRA_RC',
	CD_AQ_LACS_RC        CHAR(2) NULL 
		TITLE 'CD_AQ_LACS_RC',
	IN_AQ_LACS_RC        CHAR(1) NULL 
		TITLE 'IN_AQ_LACS_RC',
	IN_VM_NCOA_MATCH_RC  CHAR(1) NULL 
		TITLE 'IN_VM_NCOA_MATCH_RC',
	CD_VM_NCOA_FOOTNOTE_RC CHAR(2) NULL 
		TITLE 'CD_VM_NCOA_FOOTNOTE_RC',
	CD_VM_NCOA_FWD_TYPE_RC CHAR(1) NULL 
		TITLE 'CD_VM_NCOA_FWD_TYPE_RC',
	FL_VM_NCOA_FWD_RC    CHAR(1) NULL 
		TITLE 'FL_VM_NCOA_FWD_RC',
	CD_NCOA_NIX_ACTION   CHAR(1) NULL 
		TITLE 'CD_NCOA_NIX_ACTION',
	CD_NCOA_ZIP_CORRCT   CHAR(1) NULL 
		TITLE 'CD_NCOA_ZIP_CORRCT',
	CD_NCOA_COA_INDEX    CHAR(1) NULL 
		TITLE 'CD_NCOA_COA_INDEX',
	CD_NCOA_ADDR_TYPE    CHAR(1) NULL 
		TITLE 'CD_NCOA_ADDR_TYPE',
	CD_NCOA_MATCH        CHAR(2) NULL 
		TITLE 'CD_NCOA_MATCH',
	ID_NCOA_VENDOR       CHAR(2) NULL 
		TITLE 'ID_NCOA_VENDOR',
	DA_CUST_ADDED        DATE NULL 
		TITLE 'DA_CUST_ADDED',
	MO_CUST_ADDED        INTEGER NULL 
		TITLE 'MO_CUST_ADDED',
	YR_CUST_ADDED        SMALLINT NULL 
		TITLE 'YR_CUST_ADDED',
	DA_BIRTH             DATE NULL 
		TITLE 'DA_BIRTH',
	FL_DECEASED          CHAR(1) NULL 
		TITLE 'FL_DECEASED',
	FL_TP_CARDHOLDER     CHAR(1) NULL 
		TITLE 'FL_TP_CARDHOLDER',
	DA_CUST_MODIFIED     DATE NULL 
		TITLE 'DA_CUST_MODIFIED',
	IN_ADDR_RELIABLE     CHAR(2) NULL 
		TITLE 'IN_ADDR_RELIABLE',
	NA_ALT_FIRST         CHAR(14) NULL 
		TITLE 'NA_ALT_FIRST',
	IN_GENDER            CHAR(1) NULL 
		TITLE 'IN_GENDER',
	IN_ALT_GENDER        CHAR(1) NULL 
		TITLE 'IN_ALT_GENDER',
	ID_CARRIER_RTE       CHAR(4) NULL 
		TITLE 'ID_CARRIER_RTE',
	ID_DPBC              SMALLINT NULL 
		TITLE 'ID_DPBC',
	ID_ELOT              CHAR(5) NULL 
		TITLE 'ID_ELOT',
	DA_MOVED             DATE NULL 
		TITLE 'DA_MOVED',
	CD_CHAIN_REF         SMALLINT NULL 
		TITLE 'CD_CHAIN_REF',
	NU_PRIORITY          SMALLINT NULL 
		TITLE 'NU_PRIORITY',
	FL_DMA_DONT_MAIL     CHAR(1) NULL 
		TITLE 'FL_DMA_DONT_MAIL',
	FL_DMA_DONT_CALL     CHAR(1) NULL 
		TITLE 'FL_DMA_DONT_CALL',
	AD_STREET1           CHAR(50) NULL 
		TITLE 'AD_STREET1',
	AD_STREET2           CHAR(30) NULL 
		TITLE 'AD_STREET2',
	AD_STREET3           CHAR(30) NULL 
		TITLE 'AD_STREET3',
	AD_WHOLE             CHAR(90) NULL 
		TITLE 'AD_WHOLE',
	FL_BRYLANE           CHAR(1) NULL 
		TITLE 'FL_BRYLANE',
	DA_CUST_VERIFIED     DATE NULL 
		TITLE 'DA_CUST_VERIFIED',
	ID_HYG_HOUSEHOLD     BIGINT NULL 
		TITLE 'ID_HYG_HOUSEHOLD'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI019_CUSTONLY
	ADD CONSTRAINT XPKVMCI019_CUSTONLY PRIMARY KEY (ID_CUST);

CREATE  TABLE VMCI021_CUST_PHONE
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	TE_CUST              DECIMAL(10,0) NOT NULL 
		TITLE 'TE_CUST',
	IN_PHONE_SRCE        CHAR(2) NULL 
		TITLE 'IN_PHONE_SRCE',
	FL_PHONE_UNLISTED    CHAR(1) NULL 
		TITLE 'FL_PHONE_UNLISTED',
	DA_PHONE_ADDED       DATE NULL 
		TITLE 'DA_PHONE_ADDED',
	IN_PHONE_TYPE        CHAR(1) NULL 
		TITLE 'IN_PHONE_TYPE',
	TE_PHONE_EXT         CHAR(4) NULL 
		TITLE 'TE_PHONE_EXT',
	CD_PHONE_VERIFIED    CHAR(1) NULL 
		TITLE 'CD_PHONE_VERIFIED',
	DA_PHONE_VERIFIED    DATE NULL 
		TITLE 'DA_PHONE_VERIFIED',
	FL_PHONE_STATUS      CHAR(1) NULL 
		TITLE 'FL_PHONE_STATUS',
	CD_PHONE_CATEGORY    CHAR(1) NULL 
		TITLE 'CD_PHONE_CATEGORY',
	DA_PH_CUST_VERIFIED  DATE NULL 
		TITLE 'DA_PH_CUST_VERIFIED'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI021_CUST_PHONE
	ADD CONSTRAINT XPKVMCI021_CUST_PHONE PRIMARY KEY (ID_CUST,TE_CUST);

CREATE  TABLE VMCI067_CUST_BLOCK
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	ID_BLOCK_GRP         DECIMAL(12,3) NULL 
		TITLE 'ID_BLOCK_GRP',
	CD_CENSUS_STATE      BYTEINT NULL 
		TITLE 'CD_CENSUS_STATE',
	CD_CENSUS_COUNTY     SMALLINT NULL 
		TITLE 'CD_CENSUS_COUNTY',
	CD_CENSUS_TRACT      INTEGER NULL 
		TITLE 'CD_CENSUS_TRACT',
	CD_CENSUS_BG         BYTEINT NULL 
		TITLE 'CD_CENSUS_BG',
	CD_CENSUS_MSA        SMALLINT NULL 
		TITLE 'CD_CENSUS_MSA',
	CD_CENSUS_MCDCCD     INTEGER NULL 
		TITLE 'CD_CENSUS_MCDCCD',
	CD_CENSUS_PLACE      INTEGER NULL 
		TITLE 'CD_CENSUS_PLACE',
	CD_CUST_LAT          DECIMAL(9,6) NULL 
		TITLE 'CD_CUST_LAT',
	CD_CUST_LONG         DECIMAL(9,6) NULL 
		TITLE 'CD_CUST_LONG',
	CD_CENSUS_BLOCK      SMALLINT NULL 
		TITLE 'CD_CENSUS_BLOCK',
	CD_CENSUS_CBSA       INTEGER NULL 
		TITLE 'CD_CENSUS_CBSA',
	FL_CENSUS_CBSA_METRO CHAR(1) NULL 
		TITLE 'FL_CENSUS_CBSA_METRO',
	CD_CENSUS_CSA        SMALLINT NULL 
		TITLE 'CD_CENSUS_CSA'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI067_CUST_BLOCK
	ADD CONSTRAINT XPKVMCI067_CUST_BLOCK PRIMARY KEY (ID_CUST);

CREATE  TABLE VMCI079_CLUB_MEMB
(

	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	ID_CLUB_MEMB         DECIMAL(10,0) NOT NULL 
		TITLE 'ID_CLUB_MEMB',
	CD_CLUB              CHAR(4) NULL 
		TITLE 'CD_CLUB',
	FL_NEEDS_CARD        CHAR(1) NULL 
		TITLE 'FL_NEEDS_CARD',
	FL_CARD_RET_MAIL     CHAR(1) NULL 
		TITLE 'FL_CARD_RET_MAIL',
	DA_ORIG_SIGNUP       DATE NULL 
		TITLE 'DA_ORIG_SIGNUP',
	DA_RENEWED           DATE NULL 
		TITLE 'DA_RENEWED',
	DA_EXPIRATION        DATE NULL 
		TITLE 'DA_EXPIRATION',
	DA_CANCELED          DATE NULL 
		TITLE 'DA_CANCELED',
	AM_FEE_PAID          DECIMAL(5,2) NULL 
		TITLE 'AM_FEE_PAID',
	FL_AUTO_ENROLL       CHAR(1) NULL 
		TITLE 'FL_AUTO_ENROLL'
)
	PRIMARY INDEX 
	 (
			ID_CHAIN
	 );

ALTER TABLE VMCI079_CLUB_MEMB
	ADD CONSTRAINT XPKVMCI079_CLUB_MEMB PRIMARY KEY (ID_CHAIN,ID_CLUB_MEMB);

CREATE  TABLE VMCI105_CHAIN_CUST
(

	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	DA_LAST_TRNS         DATE NULL 
		TITLE 'DA_LAST_TRNS',
	CD_MAIL              CHAR(1) NULL 
		TITLE 'CD_MAIL',
	FL_DO_NOT_PROMOTE    CHAR(1) NULL 
		TITLE 'FL_DO_NOT_PROMOTE',
	FL_OK_TO_MAIL        CHAR(1) NULL 
		TITLE 'FL_OK_TO_MAIL',
	ID_STORE             SMALLINT NULL 
		TITLE 'ID_STORE',
	ID_EMP               INTEGER NULL 
		TITLE 'ID_EMP',
	DA_FIRST_TRNS        DATE NULL 
		TITLE 'DA_FIRST_TRNS',
	DA_MAIL_CODE         DATE NULL 
		TITLE 'DA_MAIL_CODE',
	FL_ACTIVE_HOUSCARD   CHAR(1) NULL 
		TITLE 'FL_ACTIVE_HOUSCARD',
	FL_HLDR_HOUSCARD     CHAR(1) NULL 
		TITLE 'FL_HLDR_HOUSCARD',
	FL_DECLIN_HOUSCARD   CHAR(1) NULL 
		TITLE 'FL_DECLIN_HOUSCARD',
	DA_APPLY_HOUSCARD    DATE NULL 
		TITLE 'DA_APPLY_HOUSCARD',
	FL_ACTIVE_COBRAND    CHAR(1) NULL 
		TITLE 'FL_ACTIVE_COBRAND',
	FL_HLDR_COBRAND      CHAR(1) NULL 
		TITLE 'FL_HLDR_COBRAND',
	FL_CLOSED_HOUSCARD   CHAR(1) NULL 
		TITLE 'FL_CLOSED_HOUSCARD',
	FL_CLOSED_COBRAND    CHAR(1) NULL 
		TITLE 'FL_CLOSED_COBRAND',
	CD_ACCOUNT_TERM      CHAR(1) NULL 
		TITLE 'CD_ACCOUNT_TERM',
	FL_SHOPS_JUNIORS     CHAR(1) NULL 
		TITLE 'FL_SHOPS_JUNIORS',
	FL_SHOPS_MISSES      CHAR(1) NULL 
		TITLE 'FL_SHOPS_MISSES',
	FL_SHOPS_PLUS        CHAR(1) NULL 
		TITLE 'FL_SHOPS_PLUS',
	FL_OK_TO_PHONE       CHAR(1) NULL 
		TITLE 'FL_OK_TO_PHONE',
	DA_CH_CUST_ADDED     DATE NULL 
		TITLE 'DA_CH_CUST_ADDED',
	FL_OK_TO_STMT_INS    CHAR(1) NULL 
		TITLE 'FL_OK_TO_STMT_INS',
	IN_CUST_SOURCE_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_FIRST',
	IN_CUST_SOURCE_2ND_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_FIRST',
	IN_CUST_SOURCE_LAST  CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_LAST',
	IN_CUST_SOURCE_2ND_LAST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_LAST',
	CD_LBO_MIGRATION_STATUS BYTEINT NULL 
		TITLE 'CD_LBO_MIGRATION_STATUS'
)
	PRIMARY INDEX 
	 (
			ID_CHAIN
	 );

ALTER TABLE VMCI105_CHAIN_CUST
	ADD CONSTRAINT XPKVMCI105_CHAIN_CUST PRIMARY KEY (ID_CHAIN,ID_CUST);

CREATE  TABLE VMCI172_CHAIN_CUST_EMAIL
(

	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	FL_OK_TO_EMAIL       CHAR(1) NULL 
		TITLE 'FL_OK_TO_EMAIL',
	DA_EMAIL_CREATED     DATE NULL 
		TITLE 'DA_EMAIL_CREATED',
	DA_EMAIL_UPDATED     DATE NULL 
		TITLE 'DA_EMAIL_UPDATED',
	FL_HABEAS_COMPL      CHAR(1) NULL 
		TITLE 'FL_HABEAS_COMPL',
	CD_EMAIL             CHAR(1) NULL 
		TITLE 'CD_EMAIL',
	DA_EMAIL_CODE        DATE NULL 
		TITLE 'DA_EMAIL_CODE',
	CD_DBL_OPT_IN        CHAR(1) NULL 
		TITLE 'CD_DBL_OPT_IN',
	DA_EM_CUST_VERIFIED  DATE NULL 
		TITLE 'DA_EM_CUST_VERIFIED'
)
	PRIMARY INDEX 
	 (
			ID_CHAIN
	 );

ALTER TABLE VMCI172_CHAIN_CUST_EMAIL
	ADD CONSTRAINT XPKVMCI172_CHAIN_CUST_EMAIL PRIMARY KEY (ID_CHAIN,ID_CUST,ID_EMAIL);

CREATE  TABLE VMCI173_EMAIL_ADDRESS
(

	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	ID_EMAIL_DOMAIN      INTEGER NULL 
		TITLE 'ID_EMAIL_DOMAIN',
	AD_EMAIL             VARCHAR(65) NULL 
		TITLE 'AD_EMAIL',
	NU_BB_SOFT           INTEGER NULL 
		TITLE 'NU_BB_SOFT',
	NU_BB_HARD           INTEGER NULL 
		TITLE 'NU_BB_HARD',
	CD_EMAIL_STYLE       CHAR(1) NULL 
		TITLE 'CD_EMAIL_STYLE',
	DA_TMCI173_CREATED   DATE NULL 
		TITLE 'DA_TMCI173_CREATED',
	DA_TMCI173_UPDATED   DATE NULL 
		TITLE 'DA_TMCI173_UPDATED',
	IN_CUST_SOURCE_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_FIRST',
	IN_CUST_SOURCE_2ND_FIRST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_FIRST',
	IN_CUST_SOURCE_LAST  CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_LAST',
	IN_CUST_SOURCE_2ND_LAST CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND_LAST',
	CD_EMAIL_INVALID     CHAR(2) NULL 
		TITLE 'CD_EMAIL_INVALID',
	DA_FIRST_HARD_BB     DATE NULL 
		TITLE 'DA_FIRST_HARD_BB',
	DA_LAST_HARD_BB      DATE NULL 
		TITLE 'DA_LAST_HARD_BB',
	DA_FIRST_SOFT_BB     DATE NULL 
		TITLE 'DA_FIRST_SOFT_BB',
	DA_LAST_SOFT_BB      DATE NULL 
		TITLE 'DA_LAST_SOFT_BB'
)
	PRIMARY INDEX 
	 (
			ID_EMAIL
	 );

ALTER TABLE VMCI173_EMAIL_ADDRESS
	ADD CONSTRAINT XPKVMCI173_EMAIL_ADDRESS PRIMARY KEY (ID_EMAIL);

CREATE  TABLE VMCI173_FULL_EMAIL_ADDR_STATUS
(

	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	FL_EMAIL_BB_VALID    VARCHAR(1) NULL 
		TITLE 'FL_EMAIL_BB_VALID',
	NU_BB_HARD           INTEGER NULL 
		TITLE 'NU_BB_HARD',
	DA_LAST_HARD_BB      DATE NULL 
		TITLE 'DA_LAST_HARD_BB',
	DA_FIRST_HARD_BB     DATE NULL 
		TITLE 'DA_FIRST_HARD_BB',
	DA_LAST_BB           DATE NULL 
		TITLE 'DA_LAST_BB',
	FL_HARD_BB_VALID     VARCHAR(1) NULL 
		TITLE 'FL_HARD_BB_VALID',
	NU_BB_SOFT           INTEGER NULL 
		TITLE 'NU_BB_SOFT',
	DA_FIRST_SOFT_BB     DATE NULL 
		TITLE 'DA_FIRST_SOFT_BB',
	DA_LAST_SOFT_BB      DATE NULL 
		TITLE 'DA_LAST_SOFT_BB',
	FL_SOFT_BB_VALID     VARCHAR(1) NULL 
		TITLE 'FL_SOFT_BB_VALID'
)
	PRIMARY INDEX 
	 (
			ID_EMAIL
	 );

ALTER TABLE VMCI173_FULL_EMAIL_ADDR_STATUS
	ADD CONSTRAINT XPKVMCI173_FULL_EMAIL_ADDR_STATUS PRIMARY KEY (ID_EMAIL);

CREATE  TABLE VMCI173_FULL_EMAIL_ADDRESS
(

	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	AD_EMAIL             VARCHAR(65) NULL 
		TITLE 'AD_EMAIL',
	AD_EMAIL_DOMAIN      VARCHAR(65) NULL 
		TITLE 'AD_EMAIL_DOMAIN',
	AD_EMAIL_FULL        VARCHAR(131) NULL 
		TITLE 'AD_EMAIL_FULL',
	CD_EMAIL_STYLE       CHAR(1) NULL 
		TITLE 'CD_EMAIL_STYLE'
)
	PRIMARY INDEX 
	 (
			ID_EMAIL
	 );

ALTER TABLE VMCI173_FULL_EMAIL_ADDRESS
	ADD CONSTRAINT XPKVMCI173_FULL_EMAIL_ADDRESS PRIMARY KEY (ID_EMAIL);

CREATE  TABLE VMCI180_CUST_DEMOG
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	DA_TMCI180_ADDED     DATE NULL 
		TITLE 'DA_TMCI180_ADDED',
	DA_TMCI180_UPDATE    DATE NULL 
		TITLE 'DA_TMCI180_UPDATE',
	FL_MERGED            CHAR(1) NULL 
		TITLE 'FL_MERGED',
	DA_MERGED            DATE NULL 
		TITLE 'DA_MERGED',
	CD_ETHNIC            CHAR(2) NULL 
		TITLE 'CD_ETHNIC',
	CD_RELIGION          CHAR(1) NULL 
		TITLE 'CD_RELIGION',
	CD_ROLLUP            CHAR(1) NULL 
		TITLE 'CD_ROLLUP',
	CD_LANGUAGE_PREF     CHAR(2) NULL 
		TITLE 'CD_LANGUAGE_PREF',
	CD_COUNTRY_OF_ORIGIN CHAR(2) NULL 
		TITLE 'CD_COUNTRY_OF_ORIGIN',
	CD_INCOME_EST_HH     CHAR(1) NULL 
		TITLE 'CD_INCOME_EST_HH',
	CD_INC_EST_HH_MTCH_LVL CHAR(1) NULL 
		TITLE 'CD_INC_EST_HH_MTCH_LVL',
	FL_MALE18_24_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE18_24_IN_HH',
	FL_FEMALE18_24_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE18_24_IN_HH',
	FL_UNKNOWN18_24_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN18_24_IN_HH',
	FL_MALE25_34_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE25_34_IN_HH',
	FL_FEMALE25_34_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE25_34_IN_HH',
	FL_UNKNOWN25_34_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN25_34_IN_HH',
	FL_MALE35_44_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE35_44_IN_HH',
	FL_FEMALE35_44_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE35_44_IN_HH',
	FL_UNKNOWN35_44_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN35_44_IN_HH',
	FL_MALE45_54_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE45_54_IN_HH',
	FL_FEMALE45_54_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE45_54_IN_HH',
	FL_UNKNOWN45_54_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN45_54_IN_HH',
	FL_MALE55_64_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE55_64_IN_HH',
	FL_FEMALE55_64_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE55_64_IN_HH',
	FL_UNKNOWN55_64_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN55_64_IN_HH',
	FL_MALE65_74_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE65_74_IN_HH',
	FL_FEMALE65_74_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE65_74_IN_HH',
	FL_UNKNOWN65_74_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN65_74_IN_HH',
	FL_MALE_75PLUS_IN_HH CHAR(1) NULL 
		TITLE 'FL_MALE_75PLUS_IN_HH',
	FL_FEMALE_75PLUS_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE_75PLUS_IN_HH',
	FL_UNKNOWN_75PLUS_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN_75PLUS_IN_HH',
	CD_ADULT_AGE_MTCH_LVL CHAR(1) NULL 
		TITLE 'CD_ADULT_AGE_MTCH_LVL',
	CD_1ST_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_1ST_INDIVIDUAL_AGE',
	CD_1ST_IND_MTCH_LVL  CHAR(1) NULL 
		TITLE 'CD_1ST_IND_MTCH_LVL',
	CD_2ND_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_2ND_INDIVIDUAL_AGE',
	CD_IP_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_IP_INDIVIDUAL_AGE',
	CD_3RD_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_3RD_INDIVIDUAL_AGE',
	CD_4TH_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_4TH_INDIVIDUAL_AGE',
	CD_5TH_INDIVIDUAL_AGE CHAR(2) NULL 
		TITLE 'CD_5TH_INDIVIDUAL_AGE',
	FL_CC_GOLD_PREMIUM   CHAR(1) NULL 
		TITLE 'FL_CC_GOLD_PREMIUM',
	FL_CC_REGULAR        CHAR(1) NULL 
		TITLE 'FL_CC_REGULAR',
	CD_1ST_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_1ST_INDIVIDUAL_RACE',
	CD_2ND_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_2ND_INDIVIDUAL_RACE',
	CD_3RD_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_3RD_INDIVIDUAL_RACE',
	CD_4TH_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_4TH_INDIVIDUAL_RACE',
	CD_5TH_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_5TH_INDIVIDUAL_RACE',
	CD_IP_INDIVIDUAL_OCCUPATION CHAR(1) NULL 
		TITLE 'CD_IP_INDIVIDUAL_OCCUPATION',
	CD_IP_INDIVIDUAL_GENDER CHAR(1) NULL 
		TITLE 'CD_IP_INDIVIDUAL_GENDER',
	CD_IP_INDIVIDUAL_EDUCATION CHAR(1) NULL 
		TITLE 'CD_IP_INDIVIDUAL_EDUCATION',
	CD_IP_INDIVIDUAL_RACE CHAR(1) NULL 
		TITLE 'CD_IP_INDIVIDUAL_RACE',
	CD_MARITAL_STATUS_IN_HH CHAR(1) NULL 
		TITLE 'CD_MARITAL_STATUS_IN_HH',
	CD_MARITAL_STATUS_MTCH_LVL CHAR(1) NULL 
		TITLE 'CD_MARITAL_STATUS_MTCH_LVL',
	FL_MALE00_02_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE00_02_IN_HH',
	FL_FEMALE00_02_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE00_02_IN_HH',
	FL_UNKNOWN00_02_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN00_02_IN_HH',
	FL_MALE03_05_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE03_05_IN_HH',
	FL_FEMALE03_05_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE03_05_IN_HH',
	FL_UNKNOWN03_05_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN03_05_IN_HH',
	FL_MALE06_10_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE06_10_IN_HH',
	FL_FEMALE06_10_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE06_10_IN_HH',
	FL_UNKNOWN06_10_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN06_10_IN_HH',
	FL_MALE11_15_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE11_15_IN_HH',
	FL_FEMALE11_15_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE11_15_IN_HH',
	FL_UNKNOWN11_15_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN11_15_IN_HH',
	FL_MALE16_17_IN_HH   CHAR(1) NULL 
		TITLE 'FL_MALE16_17_IN_HH',
	FL_FEMALE16_17_IN_HH CHAR(1) NULL 
		TITLE 'FL_FEMALE16_17_IN_HH',
	FL_UNKNOWN16_17_IN_HH CHAR(1) NULL 
		TITLE 'FL_UNKNOWN16_17_IN_HH',
	CD_NUM_OF_CHILDREN   CHAR(1) NULL 
		TITLE 'CD_NUM_OF_CHILDREN',
	CD_1ST_INDIVIDUAL_OCCU CHAR(1) NULL 
		TITLE 'CD_1ST_INDIVIDUAL_OCCU',
	NA_FIRST_1ST_IND     CHAR(10) NULL 
		TITLE 'NA_FIRST_1ST_IND',
	NA_MIDDLE_1ST_IND    CHAR(1) NULL 
		TITLE 'NA_MIDDLE_1ST_IND',
	CD_GENDER_1ST_IND    CHAR(1) NULL 
		TITLE 'CD_GENDER_1ST_IND',
	NA_FIRST_2ND_IND     CHAR(10) NULL 
		TITLE 'NA_FIRST_2ND_IND',
	NA_MIDDLE_2ND_IND    CHAR(1) NULL 
		TITLE 'NA_MIDDLE_2ND_IND',
	CD_GENDER_2ND_IND    CHAR(1) NULL 
		TITLE 'CD_GENDER_2ND_IND',
	FL_WORKING_WOMAN     CHAR(1) NULL 
		TITLE 'FL_WORKING_WOMAN',
	NA_FIRST_3RD_IND     CHAR(10) NULL 
		TITLE 'NA_FIRST_3RD_IND',
	NA_MIDDLE_3RD_IND    CHAR(1) NULL 
		TITLE 'NA_MIDDLE_3RD_IND',
	CD_GENDER_3RD_IND    CHAR(1) NULL 
		TITLE 'CD_GENDER_3RD_IND',
	NA_FIRST_4TH_IND     CHAR(10) NULL 
		TITLE 'NA_FIRST_4TH_IND',
	NA_MIDDLE_4TH_IND    CHAR(1) NULL 
		TITLE 'NA_MIDDLE_4TH_IND',
	CD_GENDER_4TH_IND    CHAR(1) NULL 
		TITLE 'CD_GENDER_4TH_IND',
	NA_FIRST_5TH_IND     CHAR(10) NULL 
		TITLE 'NA_FIRST_5TH_IND',
	NA_MIDDLE_5TH_IND    CHAR(1) NULL 
		TITLE 'NA_MIDDLE_5TH_IND',
	CD_GENDER_5TH_IND    CHAR(1) NULL 
		TITLE 'CD_GENDER_5TH_IND',
	CD_HOME_OWNER_RENTER CHAR(1) NULL 
		TITLE 'CD_HOME_OWNER_RENTER',
	CD_HOME_OWN_RENT_MTCH_LVL CHAR(1) NULL 
		TITLE 'CD_HOME_OWN_RENT_MTCH_LVL',
	NU_LENGTH_OF_RESIDENCE BYTEINT NULL 
		TITLE 'NU_LENGTH_OF_RESIDENCE',
	CD_LEN_OF_RESIDENCE_MTCH_LVL CHAR(1) NULL 
		TITLE 'CD_LEN_OF_RESIDENCE_MTCH_LVL',
	CD_HOME_MARKET_VAL_RANGE CHAR(1) NULL 
		TITLE 'CD_HOME_MARKET_VAL_RANGE',
	CD_HOME_ASSESSED_VAL_RANGE CHAR(1) NULL 
		TITLE 'CD_HOME_ASSESSED_VAL_RANGE',
	CD_HOME_MARKET_VAL_RANGE_PREM CHAR(1) NULL 
		TITLE 'CD_HOME_MARKET_VAL_RANGE_PREM',
	CD_DWELLING_TYPE     CHAR(1) NULL 
		TITLE 'CD_DWELLING_TYPE',
	CD_PROPERTY_TYPE     CHAR(1) NULL 
		TITLE 'CD_PROPERTY_TYPE',
	TX_APT_NUM           CHAR(8) NULL 
		TITLE 'TX_APT_NUM',
	FL_WOMAN_PLUS_SIZES  CHAR(1) NULL 
		TITLE 'FL_WOMAN_PLUS_SIZES',
	FL_WPS_ACCESSORIES   CHAR(1) NULL 
		TITLE 'FL_WPS_ACCESSORIES',
	FL_WPS_ACTIVEWEAR    CHAR(1) NULL 
		TITLE 'FL_WPS_ACTIVEWEAR',
	FL_WPS_BUSINESS      CHAR(1) NULL 
		TITLE 'FL_WPS_BUSINESS',
	FL_WPS_CASUAL        CHAR(1) NULL 
		TITLE 'FL_WPS_CASUAL',
	FL_WPS_EVENINGWEAR   CHAR(1) NULL 
		TITLE 'FL_WPS_EVENINGWEAR',
	FL_WPS_FOOTWEAR      CHAR(1) NULL 
		TITLE 'FL_WPS_FOOTWEAR',
	FL_WPS_LOUNGEWEAR    CHAR(1) NULL 
		TITLE 'FL_WPS_LOUNGEWEAR',
	FL_WPS_MATERNITY     CHAR(1) NULL 
		TITLE 'FL_WPS_MATERNITY',
	FL_WPS_OUTERWEAR     CHAR(1) NULL 
		TITLE 'FL_WPS_OUTERWEAR',
	FL_WPS_SWIMWEAR      CHAR(1) NULL 
		TITLE 'FL_WPS_SWIMWEAR',
	FL_WPS_UNDERWEAR_HOSIERY CHAR(1) NULL 
		TITLE 'FL_WPS_UNDERWEAR_HOSIERY',
	FL_WPS_UNIFORMS      CHAR(1) NULL 
		TITLE 'FL_WPS_UNIFORMS',
	FL_MOB_APPAREL_FEMALE CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_FEMALE',
	FL_MOB_APPAREL_JEWLERY CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_JEWLERY',
	FL_MOB_APPAREL_MALE  CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_MALE',
	FL_MOB_APPAREL_PLUS_WOMEN CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_PLUS_WOMEN',
	FL_MOB_APPAREL_TEEN  CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_TEEN',
	FL_MOB_APPAREL_UNKNOWN CHAR(1) NULL 
		TITLE 'FL_MOB_APPAREL_UNKNOWN',
	FL_MOB_ART_ANTIQUE   CHAR(1) NULL 
		TITLE 'FL_MOB_ART_ANTIQUE',
	FL_MOB_ARTS_CREAFTS  CHAR(1) NULL 
		TITLE 'FL_MOB_ARTS_CREAFTS',
	FL_MOB_ART_SUPPLIES  CHAR(1) NULL 
		TITLE 'FL_MOB_ART_SUPPLIES',
	FL_MOB_BEAUTY        CHAR(1) NULL 
		TITLE 'FL_MOB_BEAUTY',
	FL_MOB_BOOKS         CHAR(1) NULL 
		TITLE 'FL_MOB_BOOKS',
	FL_MOB_CHILD_MDSE    CHAR(1) NULL 
		TITLE 'FL_MOB_CHILD_MDSE',
	FL_MOB_COLLECTABLE   CHAR(1) NULL 
		TITLE 'FL_MOB_COLLECTABLE',
	FL_MOB_COMPUTER_SOFTWARE CHAR(1) NULL 
		TITLE 'FL_MOB_COMPUTER_SOFTWARE',
	FL_MOB_ELECTRONICS   CHAR(1) NULL 
		TITLE 'FL_MOB_ELECTRONICS',
	FL_MOB_EQUESTRIAN    CHAR(1) NULL 
		TITLE 'FL_MOB_EQUESTRIAN',
	FL_MOB_FOOD          CHAR(1) NULL 
		TITLE 'FL_MOB_FOOD',
	FL_MOB_GENERAL_GIFTS_MDSE CHAR(1) NULL 
		TITLE 'FL_MOB_GENERAL_GIFTS_MDSE',
	FL_MOB_GIFT          CHAR(1) NULL 
		TITLE 'FL_MOB_GIFT',
	FL_MOB_HEALTH        CHAR(1) NULL 
		TITLE 'FL_MOB_HEALTH',
	FL_MOB_HOME_FURNISH_DECOR CHAR(1) NULL 
		TITLE 'FL_MOB_HOME_FURNISH_DECOR',
	FL_MOB_HIGH_TICKET_MDSE CHAR(1) NULL 
		TITLE 'FL_MOB_HIGH_TICKET_MDSE',
	FL_MOB_LOW_TICKET_MDSE CHAR(1) NULL 
		TITLE 'FL_MOB_LOW_TICKET_MDSE',
	FL_MOB_MUSIC         CHAR(1) NULL 
		TITLE 'FL_MOB_MUSIC',
	FL_MOB_OUTDOOR_GARDENING CHAR(1) NULL 
		TITLE 'FL_MOB_OUTDOOR_GARDENING',
	FL_MOB_HUNTING_FISHING CHAR(1) NULL 
		TITLE 'FL_MOB_HUNTING_FISHING',
	FL_MOB_PET_SUPPLIES  CHAR(1) NULL 
		TITLE 'FL_MOB_PET_SUPPLIES',
	FL_MOB_SPORTS_GOLF   CHAR(1) NULL 
		TITLE 'FL_MOB_SPORTS_GOLF',
	FL_MOB_SPORTS        CHAR(1) NULL 
		TITLE 'FL_MOB_SPORTS',
	FL_MOB_TRAVEL        CHAR(1) NULL 
		TITLE 'FL_MOB_TRAVEL',
	FL_MOB_VIDEO_DVD     CHAR(1) NULL 
		TITLE 'FL_MOB_VIDEO_DVD',
	CD_MAIL_ORDER_BUYER  CHAR(1) NULL 
		TITLE 'CD_MAIL_ORDER_BUYER',
	CD_MAIL_ORDER_RESPONDER CHAR(1) NULL 
		TITLE 'CD_MAIL_ORDER_RESPONDER',
	FL_ONLINE_PURCHASING CHAR(1) NULL 
		TITLE 'FL_ONLINE_PURCHASING',
	FL_INFOBASE_POSITIVE_MTCH CHAR(1) NULL 
		TITLE 'FL_INFOBASE_POSITIVE_MTCH',
	NU_SOURCES           BYTEINT NULL 
		TITLE 'NU_SOURCES',
	FL_DMA_MAIL_SUPPRESS CHAR(1) NULL 
		TITLE 'FL_DMA_MAIL_SUPPRESS'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI180_CUST_DEMOG
	ADD CONSTRAINT XPKVMCI180_CUST_DEMOG PRIMARY KEY (ID_CUST);

CREATE  TABLE VMCI396_CURR_OPT_IN_OUT_FULL
(

	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	IN_CUST_SOURCE       CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE',
	IN_CUST_SOURCE_2ND   CHAR(2) NULL 
		TITLE 'IN_CUST_SOURCE_2ND',
	TS_TMCI396_CREATED   TIMESTAMP(6) NOT NULL 
		TITLE 'TS_TMCI396_CREATED',
	ID_CUST_ORIG         INTEGER NOT NULL 
		TITLE 'ID_CUST_ORIG',
	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	TE_CUST              DECIMAL(10,0) NOT NULL 
		TITLE 'TE_CUST',
	ID_STORE             SMALLINT NULL 
		TITLE 'ID_STORE',
	CD_OPT_IN_OUT        CHAR(2) NOT NULL 
		TITLE 'CD_OPT_IN_OUT',
	FL_OPT_IN            CHAR(1) NULL 
		TITLE 'FL_OPT_IN',
	TS_OPT_IN_OUT        TIMESTAMP(6) NULL 
		TITLE 'TS_OPT_IN_OUT',
	ID_CUST_EXT          DECIMAL(13,0) NULL 
		TITLE 'ID_CUST_EXT',
	CD_CUST_EXT_TYPE     CHAR(1) NULL 
		TITLE 'CD_CUST_EXT_TYPE',
	DA_OPT_IN_OUT        DATE NULL 
		TITLE 'DA_OPT_IN_OUT'
)
	PRIMARY INDEX 
	 (
			ID_CUST
	 );

ALTER TABLE VMCI396_CURR_OPT_IN_OUT_FULL
	ADD CONSTRAINT XPKVMCI396_CURR_OPT_IN_OUT_FULL PRIMARY KEY (ID_CUST,ID_CHAIN,ID_CUST_ORIG,ID_EMAIL,TE_CUST,TS_TMCI396_CREATED,CD_OPT_IN_OUT);

CREATE  TABLE VMCI972_CHAIN_CUST_FULLEMAIL
(

	ID_CHAIN             BYTEINT NOT NULL 
		TITLE 'ID_CHAIN',
	ID_CUST              INTEGER NOT NULL 
		TITLE 'ID_CUST',
	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	AD_EMAIL_FULL        VARCHAR(130) NULL 
		TITLE 'AD_EMAIL_FULL',
	ID_DOMAIN            INTEGER NULL 
		TITLE 'ID_DOMAIN',
	CD_EMAIL_STYLE       CHAR(1) NULL 
		TITLE 'CD_EMAIL_STYLE',
	DA_EMAIL_CREATED     DATE NULL 
		TITLE 'DA_EMAIL_CREATED',
	FL_PRIMARY_EMAIL     CHAR(1) NULL 
		TITLE 'FL_PRIMARY_EMAIL',
	DA_EM_CUST_VERIFIED  DATE NULL 
		TITLE 'DA_EM_CUST_VERIFIED',
	FL_EMAIL_VALID       CHAR(1) NULL 
		TITLE 'FL_EMAIL_VALID'
)
	PRIMARY INDEX 
	 (
			ID_CHAIN
	 );

ALTER TABLE VMCI972_CHAIN_CUST_FULLEMAIL
	ADD CONSTRAINT XPKVMCI972_CHAIN_CUST_FULLEMAIL PRIMARY KEY (ID_CHAIN,ID_CUST,ID_EMAIL);

CREATE  TABLE VMCI995_ESP_LAST_CLICK_OPEN
(

	ID_CHAIN             INTEGER NOT NULL 
		TITLE 'ID_CHAIN',
	ID_EMAIL             INTEGER NOT NULL 
		TITLE 'ID_EMAIL',
	TS_LAST_CLICK        TIMESTAMP(6) NULL 
		TITLE 'TS_LAST_CLICK',
	TS_LAST_OPEN         TIMESTAMP(6) NULL 
		TITLE 'TS_LAST_OPEN',
	DA_LAST_CLICK        DATE NULL 
		TITLE 'DA_LAST_CLICK',
	DA_LAST_OPEN         DATE NULL 
		TITLE 'DA_LAST_OPEN'
)
	PRIMARY INDEX 
	 (
			ID_CHAIN
	 );

ALTER TABLE VMCI995_ESP_LAST_CLICK_OPEN
	ADD CONSTRAINT XPKVMCI995_ESP_LAST_CLICK_OPEN PRIMARY KEY (ID_CHAIN,ID_EMAIL);

ALTER TABLE TMCI997_ESP_OUTBOUND
	ADD CONSTRAINT R_15 FOREIGN KEY (ID_CHAIN, ID_CUST) REFERENCES VMCI105_CHAIN_CUST (ID_CHAIN, ID_CUST);

ALTER TABLE VMCI015_CUST_CCARD
	ADD CONSTRAINT R_9 FOREIGN KEY (ID_CUST) REFERENCES VMCI019_CUSTOMER (ID_CUST);

ALTER TABLE VMCI019_CUSTOMER
	ADD CONSTRAINT R_3 FOREIGN KEY (ID_CHAIN, ID_CUST) REFERENCES VMCI105_CHAIN_CUST (ID_CHAIN, ID_CUST);

ALTER TABLE VMCI021_CUST_PHONE
	ADD CONSTRAINT R_16 FOREIGN KEY (ID_CUST) REFERENCES VMCI019_CUSTOMER (ID_CUST);

ALTER TABLE VMCI067_CUST_BLOCK
	ADD CONSTRAINT R_11 FOREIGN KEY (ID_CUST) REFERENCES VMCI019_CUSTOMER (ID_CUST);

ALTER TABLE VMCI172_CHAIN_CUST_EMAIL
	ADD CONSTRAINT R_4 FOREIGN KEY (ID_CHAIN, ID_CUST) REFERENCES VMCI105_CHAIN_CUST (ID_CHAIN, ID_CUST);

ALTER TABLE VMCI172_CHAIN_CUST_EMAIL
	ADD CONSTRAINT R_5 FOREIGN KEY (ID_EMAIL) REFERENCES VMCI173_EMAIL_ADDRESS (ID_EMAIL);

ALTER TABLE VMCI173_FULL_EMAIL_ADDR_STATUS
	ADD CONSTRAINT R_17 FOREIGN KEY (ID_EMAIL) REFERENCES VMCI173_EMAIL_ADDRESS (ID_EMAIL);

ALTER TABLE VMCI173_FULL_EMAIL_ADDRESS
	ADD CONSTRAINT R_8 FOREIGN KEY (ID_EMAIL) REFERENCES VMCI173_EMAIL_ADDRESS (ID_EMAIL);

ALTER TABLE VMCI180_CUST_DEMOG
	ADD CONSTRAINT R_10 FOREIGN KEY (ID_CUST) REFERENCES VMCI019_CUSTOMER (ID_CUST);

ALTER TABLE VMCI396_CURR_OPT_IN_OUT_FULL
	ADD CONSTRAINT R_14 FOREIGN KEY (ID_CHAIN, ID_CUST, ID_EMAIL) REFERENCES VMCI972_CHAIN_CUST_FULLEMAIL (ID_CHAIN, ID_CUST, ID_EMAIL);

ALTER TABLE VMCI972_CHAIN_CUST_FULLEMAIL
	ADD CONSTRAINT R_6 FOREIGN KEY (ID_CHAIN, ID_CUST) REFERENCES VMCI105_CHAIN_CUST (ID_CHAIN, ID_CUST);

ALTER TABLE VMCI972_CHAIN_CUST_FULLEMAIL
	ADD CONSTRAINT R_7 FOREIGN KEY (ID_EMAIL) REFERENCES VMCI173_EMAIL_ADDRESS (ID_EMAIL);

ALTER TABLE VMCI995_ESP_LAST_CLICK_OPEN
	ADD CONSTRAINT R_18 FOREIGN KEY (ID_EMAIL) REFERENCES VMCI173_EMAIL_ADDRESS (ID_EMAIL);

CREATE TRIGGER tI_TMCI997_ESP_OUTBOUND AFTER INSERT ON TMCI997_ESP_OUTBOUND
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on TMCI997_ESP_OUTBOUND */
    /* VMCI105_CHAIN_CUST  TMCI997_ESP_OUTBOUND on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00009d79", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="TMCI997_ESP_OUTBOUND"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_15", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot insert TMCI997_ESP_OUTBOUND because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_TMCI997_ESP_OUTBOUND AFTER UPDATE ON TMCI997_ESP_OUTBOUND
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on TMCI997_ESP_OUTBOUND */
  /* VMCI105_CHAIN_CUST  TMCI997_ESP_OUTBOUND on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000978e", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="TMCI997_ESP_OUTBOUND"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_15", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update TMCI997_ESP_OUTBOUND because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI015_CUST_CCARD AFTER INSERT ON VMCI015_CUST_CCARD
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI015_CUST_CCARD */
    /* VMCI019_CUSTOMER  VMCI015_CUST_CCARD on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000966b", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI015_CUST_CCARD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_9", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot insert VMCI015_CUST_CCARD because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI015_CUST_CCARD AFTER UPDATE ON VMCI015_CUST_CCARD
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI015_CUST_CCARD */
  /* VMCI019_CUSTOMER  VMCI015_CUST_CCARD on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009669", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI015_CUST_CCARD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_9", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI015_CUST_CCARD because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tD_VMCI019_CUSTOMER AFTER DELETE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI021_CUST_PHONE, oldtable WHERE VMCI021_CUST_PHONE.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI021_CUST_PHONE on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="00009612", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI021_CUST_PHONE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="ID_CUST" */
   ABORT 'Cannot delete VMCI019_CUSTOMER because VMCI021_CUST_PHONE exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI019_CUSTOMER2 AFTER DELETE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI067_CUST_BLOCK, oldtable WHERE VMCI067_CUST_BLOCK.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI067_CUST_BLOCK on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="000096e8", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI067_CUST_BLOCK"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_11", FK_COLUMNS="ID_CUST" */
   ABORT 'Cannot delete VMCI019_CUSTOMER because VMCI067_CUST_BLOCK exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI019_CUSTOMER3 AFTER DELETE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI180_CUST_DEMOG, oldtable WHERE VMCI180_CUST_DEMOG.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI180_CUST_DEMOG on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="00009c2b", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI180_CUST_DEMOG"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_10", FK_COLUMNS="ID_CUST" */
   ABORT 'Cannot delete VMCI019_CUSTOMER because VMCI180_CUST_DEMOG exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI019_CUSTOMER4 AFTER DELETE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI015_CUST_CCARD, oldtable WHERE VMCI015_CUST_CCARD.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI015_CUST_CCARD on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="00009360", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI015_CUST_CCARD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_9", FK_COLUMNS="ID_CUST" */
   ABORT 'Cannot delete VMCI019_CUSTOMER because VMCI015_CUST_CCARD exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tI_VMCI019_CUSTOMER AFTER INSERT ON VMCI019_CUSTOMER
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI019_CUSTOMER */
    /* VMCI105_CHAIN_CUST  VMCI019_CUSTOMER on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="000127fb", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI019_CUSTOMER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_3", FK_COLUMNS="ID_CUST""ID_CHAIN" */
    UPDATE VMCI019_CUSTOMER
      SET
        /* %SetFK(,NULL) */
        ID_CHAIN = NULL,
        ID_CUST = NULL
      WHERE
        /* %JoinPKPK(VMCI019_CUSTOMER,newtable," = "," AND") */
       VMCI019_CUSTOMER.ID_CUST = newtable.ID_CUST AND
        
        NOT EXISTS (
          SELECT * FROM VMCI105_CHAIN_CUST, newtable
            WHERE
              /* %JoinFKPK(newtable,VMCI105_CHAIN_CUST," = "," AND") */
              newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
              newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
        )
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI019_CUSTOMER AFTER UPDATE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI019_CUSTOMER, oldtable, newtable WHERE oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI021_CUST_PHONE, oldtable WHERE VMCI021_CUST_PHONE.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI021_CUST_PHONE on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000091a1", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI021_CUST_PHONE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI019_CUSTOMER because VMCI021_CUST_PHONE exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI019_CUSTOMER2 AFTER UPDATE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI019_CUSTOMER, oldtable, newtable WHERE oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI067_CUST_BLOCK, oldtable WHERE VMCI067_CUST_BLOCK.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI067_CUST_BLOCK on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000093f9", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI067_CUST_BLOCK"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_11", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI019_CUSTOMER because VMCI067_CUST_BLOCK exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI019_CUSTOMER3 AFTER UPDATE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI019_CUSTOMER, oldtable, newtable WHERE oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI180_CUST_DEMOG, oldtable WHERE VMCI180_CUST_DEMOG.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI180_CUST_DEMOG on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009ce4", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI180_CUST_DEMOG"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_10", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI019_CUSTOMER because VMCI180_CUST_DEMOG exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI019_CUSTOMER4 AFTER UPDATE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI019_CUSTOMER, oldtable, newtable WHERE oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI015_CUST_CCARD, oldtable WHERE VMCI015_CUST_CCARD.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI019_CUSTOMER */
  /* VMCI019_CUSTOMER  VMCI015_CUST_CCARD on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000090e3", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI015_CUST_CCARD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_9", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI019_CUSTOMER because VMCI015_CUST_CCARD exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI019_CUSTOMER5 AFTER UPDATE ON VMCI019_CUSTOMER
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
    /* erwin Builtin Trigger */
    /* UPDATE trigger on VMCI019_CUSTOMER */
    /* VMCI105_CHAIN_CUST  VMCI019_CUSTOMER on child update set null */
    /* ERWIN_RELATION:CHECKSUM="000127fb", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI019_CUSTOMER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_3", FK_COLUMNS="ID_CUST""ID_CHAIN" */
    UPDATE VMCI019_CUSTOMER
      SET
        /* %SetFK(,NULL) */
        ID_CHAIN = NULL,
        ID_CUST = NULL
      WHERE
        /* %JoinPKPK(VMCI019_CUSTOMER,newtable," = "," AND") */
       VMCI019_CUSTOMER.ID_CUST = newtable.ID_CUST AND
        
        NOT EXISTS (
          SELECT * FROM VMCI105_CHAIN_CUST, newtable
            WHERE
              /* %JoinFKPK(newtable,VMCI105_CHAIN_CUST," = "," AND") */
              newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
              newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
        )
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI021_CUST_PHONE AFTER INSERT ON VMCI021_CUST_PHONE
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI021_CUST_PHONE */
    /* VMCI019_CUSTOMER  VMCI021_CUST_PHONE on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00009117", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI021_CUST_PHONE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot insert VMCI021_CUST_PHONE because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI021_CUST_PHONE AFTER UPDATE ON VMCI021_CUST_PHONE
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI021_CUST_PHONE */
  /* VMCI019_CUSTOMER  VMCI021_CUST_PHONE on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="000094c6", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI021_CUST_PHONE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI021_CUST_PHONE because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI067_CUST_BLOCK AFTER INSERT ON VMCI067_CUST_BLOCK
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI067_CUST_BLOCK */
    /* VMCI019_CUSTOMER  VMCI067_CUST_BLOCK on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000937e", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI067_CUST_BLOCK"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_11", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot insert VMCI067_CUST_BLOCK because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI067_CUST_BLOCK AFTER UPDATE ON VMCI067_CUST_BLOCK
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI067_CUST_BLOCK */
  /* VMCI019_CUSTOMER  VMCI067_CUST_BLOCK on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="000093cd", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI067_CUST_BLOCK"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_11", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI067_CUST_BLOCK because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tD_VMCI105_CHAIN_CUST AFTER DELETE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM TMCI997_ESP_OUTBOUND, oldtable WHERE TMCI997_ESP_OUTBOUND.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                        TMCI997_ESP_OUTBOUND.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  TMCI997_ESP_OUTBOUND on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="00009d00", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="TMCI997_ESP_OUTBOUND"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_15", FK_COLUMNS="ID_CUST""ID_CHAIN" */
   ABORT 'Cannot delete VMCI105_CHAIN_CUST because TMCI997_ESP_OUTBOUND exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI105_CHAIN_CUST2 AFTER DELETE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, oldtable WHERE VMCI972_CHAIN_CUST_FULLEMAIL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                                VMCI972_CHAIN_CUST_FULLEMAIL.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  VMCI972_CHAIN_CUST_FULLEMAIL on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a815", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_6", FK_COLUMNS="ID_CUST""ID_CHAIN" */
   ABORT 'Cannot delete VMCI105_CHAIN_CUST because VMCI972_CHAIN_CUST_FULLEMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI105_CHAIN_CUST3 AFTER DELETE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI172_CHAIN_CUST_EMAIL, oldtable WHERE VMCI172_CHAIN_CUST_EMAIL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                            VMCI172_CHAIN_CUST_EMAIL.ID_CUST = oldtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  VMCI172_CHAIN_CUST_EMAIL on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a255", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_4", FK_COLUMNS="ID_CUST""ID_CHAIN" */
   ABORT 'Cannot delete VMCI105_CHAIN_CUST because VMCI172_CHAIN_CUST_EMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI105_CHAIN_CUST4 AFTER DELETE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
    /* erwin Builtin Trigger */
    /* DELETE trigger on VMCI105_CHAIN_CUST */
    /* VMCI105_CHAIN_CUST  VMCI019_CUSTOMER on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000e19d", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI019_CUSTOMER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_3", FK_COLUMNS="ID_CUST""ID_CHAIN" */
    UPDATE VMCI019_CUSTOMER
      SET
        /* %SetFK(,NULL) */
        ID_CHAIN = NULL,
        ID_CUST = NULL
      WHERE
        /* %JoinFKPK(VMCI019_CUSTOMER,oldtable," = "," AND") */
        VMCI019_CUSTOMER.ID_CHAIN = oldtable.ID_CHAIN AND
        VMCI019_CUSTOMER.ID_CUST = oldtable.ID_CUST
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI105_CHAIN_CUST AFTER UPDATE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI105_CHAIN_CUST, oldtable, newtable WHERE oldtable.ID_CHAIN <> newtable.ID_CHAIN OR 
                                                                                  oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM TMCI997_ESP_OUTBOUND, oldtable WHERE TMCI997_ESP_OUTBOUND.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                     TMCI997_ESP_OUTBOUND.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  TMCI997_ESP_OUTBOUND on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000973d", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="TMCI997_ESP_OUTBOUND"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_15", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update VMCI105_CHAIN_CUST because TMCI997_ESP_OUTBOUND exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI105_CHAIN_CUST2 AFTER UPDATE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI105_CHAIN_CUST, oldtable, newtable WHERE oldtable.ID_CHAIN <> newtable.ID_CHAIN OR 
                                                                                  oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, oldtable WHERE VMCI972_CHAIN_CUST_FULLEMAIL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                             VMCI972_CHAIN_CUST_FULLEMAIL.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  VMCI972_CHAIN_CUST_FULLEMAIL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a5b2", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_6", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update VMCI105_CHAIN_CUST because VMCI972_CHAIN_CUST_FULLEMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI105_CHAIN_CUST3 AFTER UPDATE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI105_CHAIN_CUST, oldtable, newtable WHERE oldtable.ID_CHAIN <> newtable.ID_CHAIN OR 
                                                                                  oldtable.ID_CUST <> newtable.ID_CUST)) AND
     (0 < (SELECT count(*) FROM VMCI172_CHAIN_CUST_EMAIL, oldtable WHERE VMCI172_CHAIN_CUST_EMAIL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                         VMCI172_CHAIN_CUST_EMAIL.ID_CUST = oldtable.ID_CUST)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  VMCI172_CHAIN_CUST_EMAIL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a007", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_4", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update VMCI105_CHAIN_CUST because VMCI172_CHAIN_CUST_EMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI105_CHAIN_CUST4 AFTER UPDATE ON VMCI105_CHAIN_CUST
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI105_CHAIN_CUST, oldtable, newtable WHERE oldtable.ID_CHAIN <> newtable.ID_CHAIN OR 
                                                                                oldtable.ID_CUST <> newtable.ID_CUST))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI105_CHAIN_CUST */
  /* VMCI105_CHAIN_CUST  VMCI019_CUSTOMER on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0000e19d", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI019_CUSTOMER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_3", FK_COLUMNS="ID_CUST""ID_CHAIN" */
     UPDATE VMCI019_CUSTOMER
       SET
         /* %SetFK(,NULL) */
         ID_CHAIN = NULL,
         ID_CUST = NULL
       WHERE
         /* %JoinFKPK(VMCI019_CUSTOMER,oldtable," = "," AND") */
         VMCI019_CUSTOMER.ID_CHAIN = oldtable.ID_CHAIN AND
         VMCI019_CUSTOMER.ID_CUST = oldtable.ID_CUST
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI172_CHAIN_CUST_EMAIL AFTER INSERT ON VMCI172_CHAIN_CUST_EMAIL
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI172_CHAIN_CUST_EMAIL */
    /* VMCI173_EMAIL_ADDRESS  VMCI172_CHAIN_CUST_EMAIL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000a129", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot insert VMCI172_CHAIN_CUST_EMAIL because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tI_VMCI172_CHAIN_CUST_EMAIL2 AFTER INSERT ON VMCI172_CHAIN_CUST_EMAIL
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI172_CHAIN_CUST_EMAIL */
    /* VMCI105_CHAIN_CUST  VMCI172_CHAIN_CUST_EMAIL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000a48a", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_4", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot insert VMCI172_CHAIN_CUST_EMAIL because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI172_CHAIN_CUST_EMAIL AFTER UPDATE ON VMCI172_CHAIN_CUST_EMAIL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI172_CHAIN_CUST_EMAIL */
  /* VMCI173_EMAIL_ADDRESS  VMCI172_CHAIN_CUST_EMAIL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009eb8", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI172_CHAIN_CUST_EMAIL because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI172_CHAIN_CUST_EMAIL2 AFTER UPDATE ON VMCI172_CHAIN_CUST_EMAIL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI172_CHAIN_CUST_EMAIL */
  /* VMCI105_CHAIN_CUST  VMCI172_CHAIN_CUST_EMAIL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a344", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_4", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update VMCI172_CHAIN_CUST_EMAIL because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tD_VMCI173_EMAIL_ADDRESS AFTER DELETE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI995_ESP_LAST_CLICK_OPEN, oldtable WHERE VMCI995_ESP_LAST_CLICK_OPEN.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI995_ESP_LAST_CLICK_OPEN on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a8b4", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI995_ESP_LAST_CLICK_OPEN"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="ID_EMAIL" */
   ABORT 'Cannot delete VMCI173_EMAIL_ADDRESS because VMCI995_ESP_LAST_CLICK_OPEN exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI173_EMAIL_ADDRESS2 AFTER DELETE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI173_FULL_EMAIL_ADDR_STATUS, oldtable WHERE VMCI173_FULL_EMAIL_ADDR_STATUS.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDR_STATUS on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a694", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDR_STATUS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_17", FK_COLUMNS="ID_EMAIL" */
   ABORT 'Cannot delete VMCI173_EMAIL_ADDRESS because VMCI173_FULL_EMAIL_ADDR_STATUS exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI173_EMAIL_ADDRESS3 AFTER DELETE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI173_FULL_EMAIL_ADDRESS, oldtable WHERE VMCI173_FULL_EMAIL_ADDRESS.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDRESS on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a983", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDRESS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_8", FK_COLUMNS="ID_EMAIL" */
   ABORT 'Cannot delete VMCI173_EMAIL_ADDRESS because VMCI173_FULL_EMAIL_ADDRESS exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI173_EMAIL_ADDRESS4 AFTER DELETE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, oldtable WHERE VMCI972_CHAIN_CUST_FULLEMAIL.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI972_CHAIN_CUST_FULLEMAIL on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a0bd", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_7", FK_COLUMNS="ID_EMAIL" */
   ABORT 'Cannot delete VMCI173_EMAIL_ADDRESS because VMCI972_CHAIN_CUST_FULLEMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tD_VMCI173_EMAIL_ADDRESS5 AFTER DELETE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI172_CHAIN_CUST_EMAIL, oldtable WHERE VMCI172_CHAIN_CUST_EMAIL.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI172_CHAIN_CUST_EMAIL on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="00009d1b", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="ID_EMAIL" */
   ABORT 'Cannot delete VMCI173_EMAIL_ADDRESS because VMCI172_CHAIN_CUST_EMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_EMAIL_ADDRESS AFTER UPDATE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, oldtable, newtable WHERE oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI995_ESP_LAST_CLICK_OPEN, oldtable WHERE VMCI995_ESP_LAST_CLICK_OPEN.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI995_ESP_LAST_CLICK_OPEN on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a9c9", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI995_ESP_LAST_CLICK_OPEN"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_EMAIL_ADDRESS because VMCI995_ESP_LAST_CLICK_OPEN exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_EMAIL_ADDRESS2 AFTER UPDATE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, oldtable, newtable WHERE oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI173_FULL_EMAIL_ADDR_STATUS, oldtable WHERE VMCI173_FULL_EMAIL_ADDR_STATUS.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDR_STATUS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000ab9f", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDR_STATUS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_17", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_EMAIL_ADDRESS because VMCI173_FULL_EMAIL_ADDR_STATUS exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_EMAIL_ADDRESS3 AFTER UPDATE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, oldtable, newtable WHERE oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI173_FULL_EMAIL_ADDRESS, oldtable WHERE VMCI173_FULL_EMAIL_ADDRESS.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDRESS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a1ec", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDRESS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_8", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_EMAIL_ADDRESS because VMCI173_FULL_EMAIL_ADDRESS exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_EMAIL_ADDRESS4 AFTER UPDATE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, oldtable, newtable WHERE oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, oldtable WHERE VMCI972_CHAIN_CUST_FULLEMAIL.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI972_CHAIN_CUST_FULLEMAIL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009cf0", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_7", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_EMAIL_ADDRESS because VMCI972_CHAIN_CUST_FULLEMAIL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_EMAIL_ADDRESS5 AFTER UPDATE ON VMCI173_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, oldtable, newtable WHERE oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI172_CHAIN_CUST_EMAIL, oldtable WHERE VMCI172_CHAIN_CUST_EMAIL.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI172_CHAIN_CUST_EMAIL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009be1", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI172_CHAIN_CUST_EMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_EMAIL_ADDRESS because VMCI172_CHAIN_CUST_EMAIL exists.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI173_FULL_EMAIL_ADDR_STA AFTER INSERT ON VMCI173_FULL_EMAIL_ADDR_STATUS
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI173_FULL_EMAIL_ADDR_STATUS */
    /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDR_STATUS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000ac8f", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDR_STATUS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_17", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot insert VMCI173_FULL_EMAIL_ADDR_STATUS because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_FULL_EMAIL_ADDR_STA AFTER UPDATE ON VMCI173_FULL_EMAIL_ADDR_STATUS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_FULL_EMAIL_ADDR_STATUS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDR_STATUS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a817", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDR_STATUS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_17", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_FULL_EMAIL_ADDR_STATUS because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI173_FULL_EMAIL_ADDRESS AFTER INSERT ON VMCI173_FULL_EMAIL_ADDRESS
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI173_FULL_EMAIL_ADDRESS */
    /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDRESS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000a405", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDRESS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_8", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot insert VMCI173_FULL_EMAIL_ADDRESS because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI173_FULL_EMAIL_ADDRESS AFTER UPDATE ON VMCI173_FULL_EMAIL_ADDRESS
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI173_FULL_EMAIL_ADDRESS */
  /* VMCI173_EMAIL_ADDRESS  VMCI173_FULL_EMAIL_ADDRESS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a71b", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI173_FULL_EMAIL_ADDRESS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_8", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI173_FULL_EMAIL_ADDRESS because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI180_CUST_DEMOG AFTER INSERT ON VMCI180_CUST_DEMOG
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI180_CUST_DEMOG */
    /* VMCI019_CUSTOMER  VMCI180_CUST_DEMOG on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00009e40", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI180_CUST_DEMOG"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_10", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot insert VMCI180_CUST_DEMOG because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI180_CUST_DEMOG AFTER UPDATE ON VMCI180_CUST_DEMOG
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI019_CUSTOMER, newtable WHERE newtable.ID_CUST = VMCI019_CUSTOMER.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI180_CUST_DEMOG */
  /* VMCI019_CUSTOMER  VMCI180_CUST_DEMOG on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00009fb0", PARENT_OWNER="", PARENT_TABLE="VMCI019_CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="VMCI180_CUST_DEMOG"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_10", FK_COLUMNS="ID_CUST" */
       ABORT 'Cannot update VMCI180_CUST_DEMOG because VMCI019_CUSTOMER does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI396_CURR_OPT_IN_OUT_FUL AFTER INSERT ON VMCI396_CURR_OPT_IN_OUT_FULL
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, newtable WHERE newtable.ID_CHAIN = VMCI972_CHAIN_CUST_FULLEMAIL.ID_CHAIN AND
                                                                                newtable.ID_CUST = VMCI972_CHAIN_CUST_FULLEMAIL.ID_CUST AND
                                                                                newtable.ID_EMAIL = VMCI972_CHAIN_CUST_FULLEMAIL.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI396_CURR_OPT_IN_OUT_FULL */
    /* VMCI972_CHAIN_CUST_FULLEMAIL  VMCI396_CURR_OPT_IN_OUT_FULL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000b83c", PARENT_OWNER="", PARENT_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    CHILD_OWNER="", CHILD_TABLE="VMCI396_CURR_OPT_IN_OUT_FULL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="ID_CUST""ID_CHAIN""ID_EMAIL" */
       ABORT 'Cannot insert VMCI396_CURR_OPT_IN_OUT_FULL because VMCI972_CHAIN_CUST_FULLEMAIL does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI396_CURR_OPT_IN_OUT_FUL AFTER UPDATE ON VMCI396_CURR_OPT_IN_OUT_FULL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, newtable WHERE newtable.ID_CHAIN = VMCI972_CHAIN_CUST_FULLEMAIL.ID_CHAIN AND
                                                                                newtable.ID_CUST = VMCI972_CHAIN_CUST_FULLEMAIL.ID_CUST AND
                                                                                newtable.ID_EMAIL = VMCI972_CHAIN_CUST_FULLEMAIL.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI396_CURR_OPT_IN_OUT_FULL */
  /* VMCI972_CHAIN_CUST_FULLEMAIL  VMCI396_CURR_OPT_IN_OUT_FULL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000b5ab", PARENT_OWNER="", PARENT_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    CHILD_OWNER="", CHILD_TABLE="VMCI396_CURR_OPT_IN_OUT_FULL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="ID_CUST""ID_CHAIN""ID_EMAIL" */
       ABORT 'Cannot update VMCI396_CURR_OPT_IN_OUT_FULL because VMCI972_CHAIN_CUST_FULLEMAIL does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tD_VMCI972_CHAIN_CUST_FULLEMAI AFTER DELETE ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING OLD TABLE AS OLDTABLE FOR EACH ROW
   WHEN (0 < (SELECT count(*) FROM VMCI396_CURR_OPT_IN_OUT_FULL, oldtable WHERE VMCI396_CURR_OPT_IN_OUT_FULL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                                VMCI396_CURR_OPT_IN_OUT_FULL.ID_CUST = oldtable.ID_CUST AND
                                                                                VMCI396_CURR_OPT_IN_OUT_FULL.ID_EMAIL = oldtable.ID_EMAIL))
  /* erwin Builtin Trigger */
  /* DELETE trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
  /* VMCI972_CHAIN_CUST_FULLEMAIL  VMCI396_CURR_OPT_IN_OUT_FULL on parent delete restrict */
  /* ERWIN_RELATION:CHECKSUM="0000b4a3", PARENT_OWNER="", PARENT_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    CHILD_OWNER="", CHILD_TABLE="VMCI396_CURR_OPT_IN_OUT_FULL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="ID_CUST""ID_CHAIN""ID_EMAIL" */
   ABORT 'Cannot delete VMCI972_CHAIN_CUST_FULLEMAIL because VMCI396_CURR_OPT_IN_OUT_FULL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tI_VMCI972_CHAIN_CUST_FULLEMAI AFTER INSERT ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
    /* VMCI173_EMAIL_ADDRESS  VMCI972_CHAIN_CUST_FULLEMAIL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000a918", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_7", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot insert VMCI972_CHAIN_CUST_FULLEMAIL because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tI_VMCI972_CHAIN_CUST_FULLEMA2 AFTER INSERT ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
    /* VMCI105_CHAIN_CUST  VMCI972_CHAIN_CUST_FULLEMAIL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000a6cb", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_6", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot insert VMCI972_CHAIN_CUST_FULLEMAIL because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI972_CHAIN_CUST_FULLEMAI AFTER UPDATE ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN ( (0 < (SELECT count(*) FROM VMCI972_CHAIN_CUST_FULLEMAIL, oldtable, newtable WHERE oldtable.ID_CHAIN <> newtable.ID_CHAIN OR 
                                                                                            oldtable.ID_CUST <> newtable.ID_CUST OR 
                                                                                            oldtable.ID_EMAIL <> newtable.ID_EMAIL)) AND
     (0 < (SELECT count(*) FROM VMCI396_CURR_OPT_IN_OUT_FULL, oldtable WHERE VMCI396_CURR_OPT_IN_OUT_FULL.ID_CHAIN = oldtable.ID_CHAIN AND
                                                                             VMCI396_CURR_OPT_IN_OUT_FULL.ID_CUST = oldtable.ID_CUST AND
                                                                             VMCI396_CURR_OPT_IN_OUT_FULL.ID_EMAIL = oldtable.ID_EMAIL)))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
  /* VMCI972_CHAIN_CUST_FULLEMAIL  VMCI396_CURR_OPT_IN_OUT_FULL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000b131", PARENT_OWNER="", PARENT_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    CHILD_OWNER="", CHILD_TABLE="VMCI396_CURR_OPT_IN_OUT_FULL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="ID_CUST""ID_CHAIN""ID_EMAIL" */
       ABORT 'Cannot update VMCI972_CHAIN_CUST_FULLEMAIL because VMCI396_CURR_OPT_IN_OUT_FULL exists.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI972_CHAIN_CUST_FULLEMA2 AFTER UPDATE ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
  /* VMCI173_EMAIL_ADDRESS  VMCI972_CHAIN_CUST_FULLEMAIL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a5a6", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_7", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI972_CHAIN_CUST_FULLEMAIL because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI972_CHAIN_CUST_FULLEMA3 AFTER UPDATE ON VMCI972_CHAIN_CUST_FULLEMAIL
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI105_CHAIN_CUST, newtable WHERE newtable.ID_CHAIN = VMCI105_CHAIN_CUST.ID_CHAIN AND
                                                                      newtable.ID_CUST = VMCI105_CHAIN_CUST.ID_CUST
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI972_CHAIN_CUST_FULLEMAIL */
  /* VMCI105_CHAIN_CUST  VMCI972_CHAIN_CUST_FULLEMAIL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000a88f", PARENT_OWNER="", PARENT_TABLE="VMCI105_CHAIN_CUST"
    CHILD_OWNER="", CHILD_TABLE="VMCI972_CHAIN_CUST_FULLEMAIL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_6", FK_COLUMNS="ID_CUST""ID_CHAIN" */
       ABORT 'Cannot update VMCI972_CHAIN_CUST_FULLEMAIL because VMCI105_CHAIN_CUST does not exist.'
-- erwin Builtin Trigger
;


CREATE TRIGGER tI_VMCI995_ESP_LAST_CLICK_OPEN AFTER INSERT ON VMCI995_ESP_LAST_CLICK_OPEN
   REFERENCING NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
    /* erwin Builtin Trigger */
    /* INSERT trigger on VMCI995_ESP_LAST_CLICK_OPEN */
    /* VMCI173_EMAIL_ADDRESS  VMCI995_ESP_LAST_CLICK_OPEN on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0000ac9b", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI995_ESP_LAST_CLICK_OPEN"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot insert VMCI995_ESP_LAST_CLICK_OPEN because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

CREATE TRIGGER tU_VMCI995_ESP_LAST_CLICK_OPEN AFTER UPDATE ON VMCI995_ESP_LAST_CLICK_OPEN
   REFERENCING OLD TABLE AS OLDTABLE NEW TABLE AS NEWTABLE FOR EACH ROW
   WHEN (0 = (SELECT count(*) FROM VMCI173_EMAIL_ADDRESS, newtable WHERE newtable.ID_EMAIL = VMCI173_EMAIL_ADDRESS.ID_EMAIL
     ))
  /* erwin Builtin Trigger */
  /* UPDATE trigger on VMCI995_ESP_LAST_CLICK_OPEN */
  /* VMCI173_EMAIL_ADDRESS  VMCI995_ESP_LAST_CLICK_OPEN on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0000acf8", PARENT_OWNER="", PARENT_TABLE="VMCI173_EMAIL_ADDRESS"
    CHILD_OWNER="", CHILD_TABLE="VMCI995_ESP_LAST_CLICK_OPEN"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="ID_EMAIL" */
       ABORT 'Cannot update VMCI995_ESP_LAST_CLICK_OPEN because VMCI173_EMAIL_ADDRESS does not exist.'
-- erwin Builtin Trigger
;

