#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#creating the landing table
bq load --replace=true --source_format=CSV --skip_leading_rows=1 --field_delimiter="|" --quote="" \
        --schema=${schema_path}/edl_landing/lbca_vmci396_curr_opt_in_out_full.json \
        edl_landing.lbca_vmci396_curr_opt_in_out_full \
        "gs://${default_bucket}/plus/crm/vmci396_curr_opt_in_out_full*.txt.gz"
rc_check $? "Load edl_landing"

#loading the temporary table in staging
bq query --max_rows 1 --allow_large_results --destination_table edl_stage.plus_vmci396_curr_opt_in_out_full_new --use_legacy_sql=false <<!
SELECT
stg.ID_CUST                       
,stg.ID_CHAIN                      
,stg.IN_CUST_SOURCE                
,stg.IN_CUST_SOURCE_2ND            
,stg.TS_TMCI396_CREATED            
,stg.ID_CUST_ORIG                  
,stg.ID_EMAIL                      
,stg.TE_CUST                       
,stg.ID_STORE                      
,stg.CD_OPT_IN_OUT                 
,stg.FL_OPT_IN                     
,stg.TS_OPT_IN_OUT                 
,stg.CD_CUST_EXT_TYPE              
,stg.DA_OPT_IN_OUT                 
,stg.EXTRACT_TS
from
(SELECT lbca.*
,ROW_NUMBER() OVER (partition by lbca.ID_CUST, lbca.ID_CHAIN, lbca.ID_CUST_ORIG, lbca.ID_EMAIL, lbca.TE_CUST, lbca.CD_OPT_IN_OUT
order by lbca.EXTRACT_TS desc) as row_num
from
(SELECT
CAST(TRIM(c.ID_CUST) AS INT64) as ID_CUST
,CAST(TRIM(c.ID_CHAIN) AS INT64) as ID_CHAIN
,TRIM(c.IN_CUST_SOURCE) as IN_CUST_SOURCE        
,TRIM(c.IN_CUST_SOURCE_2ND) as IN_CUST_SOURCE_2ND  
,case when TRIM(c.TS_TMCI396_CREATED)='' then null
 else PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",TRIM(c.TS_TMCI396_CREATED),"America/New_York") end as TS_TMCI396_CREATED            
,case when TRIM(c.ID_CUST_ORIG)='' then null
 else CAST(TRIM(c.ID_CUST_ORIG) AS INT64) end as ID_CUST_ORIG                  
,case when TRIM(c.ID_EMAIL)='' then null
 else CAST(TRIM(c.ID_EMAIL) AS INT64) end as ID_EMAIL                      
,TRIM(c.TE_CUST) as TE_CUST                       
,case when TRIM(c.ID_STORE)='' then null
 else CAST(TRIM(c.ID_STORE) AS INT64) end as ID_STORE                      
,TRIM(c.CD_OPT_IN_OUT) as CD_OPT_IN_OUT                 
,TRIM(c.FL_OPT_IN) as FL_OPT_IN                     
,case when TRIM(c.TS_OPT_IN_OUT)='' then null
 else PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",TRIM(c.TS_OPT_IN_OUT),"America/New_York") end as TS_OPT_IN_OUT                 
,TRIM(c.CD_CUST_EXT_TYPE) as CD_CUST_EXT_TYPE              
,case when TRIM(c.DA_OPT_IN_OUT)='' then null
 else PARSE_DATE("%y/%m/%d",TRIM(c.DA_OPT_IN_OUT)) end as DA_OPT_IN_OUT                
,case when TRIM(c.EXTRACT_TS)='' then null
 else PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",TRIM(c.EXTRACT_TS),"America/New_York") end as EXTRACT_TS
from edl_landing.lbca_vmci396_curr_opt_in_out_full c
)lbca
)stg
where stg.row_num = 1
!
rc_check $? "Load incremental data from edl_landing into temp table"

#Merge/UPSert old records into new stage table
bq query  --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.plus_vmci396_curr_opt_in_out_full_new --use_legacy_sql=false <<!
select c.*
from edl_stage.plus_vmci396_curr_opt_in_out_full c
left join edl_stage.plus_vmci396_curr_opt_in_out_full_new w
    on w.ID_CUST=c.ID_CUST
    and w.ID_CHAIN=c.ID_CHAIN
    and w.ID_CUST_ORIG=c.ID_CUST_ORIG
    and coalesce(w.ID_EMAIL,0)=coalesce(c.ID_EMAIL,0)
    and coalesce(w.TE_CUST,"0")=coalesce(c.TE_CUST,"0") --Added QUOTES in COALESCE Statement as this was errored previously
    and w.CD_OPT_IN_OUT=c.CD_OPT_IN_OUT
    where w.CD_OPT_IN_OUT is null
!
rc_check $? "Merge or UPSert old records into new stage table"


#cleansing and archival
bq cp --force edl_stage.plus_vmci396_curr_opt_in_out_full edl_archive.plus_vmci396_curr_opt_in_out_full
rc_check $? "archive copy"
bq cp --force edl_stage.plus_vmci396_curr_opt_in_out_full_new edl_stage.plus_vmci396_curr_opt_in_out_full
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.plus_vmci396_curr_opt_in_out_full_new
rc_check $? "drop the temp table"

# This function is only stubbed in â€“ it runs but currently does not archive your files
archive_bucket_files "gs://${default_bucket}/plus/crm/vmci396_curr_opt_in_out_full*.txt.gz"

