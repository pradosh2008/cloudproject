#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#one time load
#bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --destination_table analytic_mart.pre_style --use_legacy_sql=false <<!
#SELECT 
#FARM_FINGERPRINT(CAST(ls.style_nbr AS STRING)) as style_key
#, ls.style_nbr as style_id
#, ls.style_desc as style_des
#, p.div_id as division_id
#, ls.dept_cd as department_cd
#, ls.dept_desc as department_des
#, ls.dept_category_cd as department_category_cd
#, CONCAT(CAST(ls.dept_cd AS STRING), SUBSTR(CAST(ls.class_cd AS STRING), -3)) as class_cd
#, ls.class_desc as class_des
#, ls.merch_category_cd as merch_category_cd
#, ls.merch_category_desc as merch_category_des
#, ls.vendor_cd as vendor_cd
#, ls.vendor_nm as vendor_nam
#, ls.intern_excl_ind as intern_excl_ind
#, ls.intern_tallstyle_ind as intern_tallstyle_ind
#, CAST(ls.markdown_week AS STRING) as markdown_week_num
#, CAST(ls.exit_week AS STRING) as exit_week_num
#, ls.gift_wrap_ind as gift_wrap_ind
#, ls.season_cd as season_cd
#, ls.season_desc as season_des
#, CAST(NULL as STRING) AS storeset_cd
#, CAST(NULL as STRING) AS storeset_des
#, ls.purch_org_cd as purch_org_cd
#, ls.ean_upc as ean_upc_des
#, ls.missy_style_nbr as missy_style_num
#, ls.petite_style_nbr as petite_style_num
#, ls.tall_style_nbr as tall_style_num
#, ls.fabric_profile_cd as fabric_profile_cd
#, ls.fabric_profile_desc as fabric_profile_des
#, ls.silhouette_profile_cd as silhouette_profile_cd
#, ls.silhouette_profile_desc as silhouette_profile_des
#, ls.top_silhouette as top_silhouette_des
#, ls.neckline as neckline_des
#, ls.sleeve_len as sleeve_len_des
#, ls.novelty as novelty_des
#, ls.end_use as end_use_des
#, ls.pyramid as pyramid_des
#, ls.plus_style_nbr as plus_style_num
#, 20160101 as batch_id
#FROM edl_stage.pre_lu_style_vw ls
#--LEFT OUTER JOIN (SELECT DIV_ID, STYLE_ID FROM edl_landing.product_hierarchy GROUP BY DIV_ID, STYLE_ID) p ON (p.STYLE_ID = style_number) 
#left join edl_stage.pre_acc_df_prod_hier_curr h 
#on s.style_number = h.style_id
#!
#
#rc_check $? "One time history load to mart"

#loading the temporary table in staging (it has new records)
bq query --max_rows 1 --allow_large_results --destination_table analytic_mart.pre_style_new --use_legacy_sql=false <<!
SELECT FARM_FINGERPRINT(CAST(s.style_number AS STRING)) as style_key
, CAST(s.style_number AS INT64) as style_id
, s.style_desc as style_des
, h.div_id as division_id
, CAST(s.dept AS INT64) as department_cd
, CAST(NULL as STRING) AS department_des
, CAST(NULL as STRING) AS department_category_cd
, CONCAT(s.dept, s.class) as class_cd
, CAST(NULL as STRING) AS class_des
, CAST(NULL as STRING) AS merch_category_cd
, CAST(NULL as STRING) AS merch_category_des
, CAST(s.vendor_number AS INT64) as vendor_cd
, CAST(NULL as STRING) AS vendor_nam
, CASE WHEN s.intern_excl = 'Y' THEN 1 ELSE 0 END as intern_excl_ind
, CASE WHEN s.intern_tallstyle = 'Y' THEN 1 ELSE 0 END as intern_tallstyle_ind
, s.markdwn_week as markdown_week_num
, s.exit_week as exit_week_num
, CASE WHEN s.gift_wrap = 'Y' THEN 1 ELSE 0 END as gift_wrap_ind
, CAST(s.season AS INT64) as season_cd
, s.season_desc as season_des
, s.storeset as storeset_cd
, s.storeset_desc as storeset_des
, CAST(s.purch_org AS INT64) as purch_org_cd
, s.ean_upc as ean_upc_des
, CAST(s.missy_style AS INT64) as missy_style_num
, CAST(s.petite_style AS INT64) as petite_style_num
, CASE WHEN LENGTH(s.tall_style) < 3 THEN 0 ELSE CAST(s.tall_style AS INT64) END as tall_style_num
, CAST(s.fabric_profile_value AS INT64) as fabric_profile_cd
, s.fabric_profile_desc as fabric_profile_des
, CAST(s.silhouette_profile_value AS INT64)as silhouette_profile_cd
, s.silhouette_profile_desc as silhouette_profile_des
, s.top_silhouette as top_silhouette_des
, s.neckline as neckline_des
, s.sleeve_len as sleeve_len_des
, s.novelty as novelty_des
, s.end_use as end_use_des
, s.pyramid as pyramid_des
, CAST(s.plus_style AS INT64) as plus_style_num
, s.batch_id
FROM edl_stage.pre_sap_style_curr s
--LEFT OUTER JOIN (SELECT DIV_ID, STYLE_ID FROM edl_landing.product_hierarchy GROUP BY DIV_ID, STYLE_ID) p ON (p.STYLE_ID = style_number) 
left join edl_stage.pre_acc_df_prod_hier_curr h 
on s.style_number = h.style_id
!
rc_check $? "Load incremental pre_sap_style data from edl_stage table into temp table"

#append the old records into the temporary table
bq query --max_rows 1 --allow_large_results --append_table \
    --destination_table analytic_mart.pre_style_new --use_legacy_sql=false <<!
select c.*
from analytic_mart.pre_style c
left join analytic_mart.pre_style_new w
    on  w.style_id = c.style_id
where w.style_id is null
!
rc_check $? "append old data to temp table which has incremental data"

#cleansing and archival
bq cp --force analytic_mart.pre_style edl_archive.pre_style
rc_check $? "archive copy"
bq cp --force analytic_mart.pre_style_new analytic_mart.pre_style
rc_check $? "replace the temp table as the actual table"
bq rm --force analytic_mart.pre_style_new
rc_check $? "drop the temp table in analytic_mart"
