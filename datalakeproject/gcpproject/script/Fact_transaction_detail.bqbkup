bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --append_table --destination_table analytic_mart.fact_transaction_detail --use_legacy_sql=false 'SELECT 
TD.transaction_key,
TD.transaction_line_num,
TM.transaction_dt,
TM.order_receive_dt,
TM.store_key,
CASE WHEN bc.brand_customer_key IS NULL THEN 0 end as brand_customer_key,
line_action_cd,
line_object_type_cd,
line_object_cd,
line_void_ind,
item_key,
CASE WHEN original_transaction_header_key is NULL THEN TD.transaction_key end as original_transaction_header_key,
CASE WHEN ST.store_key is NULL THEN TM.store_key end AS original_transaction_store_key,
CASE WHEN original_transaction_dt is NULL THEN TM.transaction_dt end as original_transaction_dt,
CASE WHEN original_transaction_line_num is NULL THEN TD.transaction_line_num end as original_transaction_line_num,
sku_cost_amt,
sku_quantity_num,
sku_retail_amt,
permanent_markdown_type_cd,
markdown_amt,
customer_paid_tax_amt,
company_owed_tax_amt,
return_reason_cd,
commision_amt,
current_retail_amt,
original_unit_retail_amt,
scanned_ind,
gift_card_ind,
taxable_ind,
style_locator_ind,
primary_salesperson_id,
secondary_salesperson_id,
original_primary_salesperson_id,
original_secondary_salesperson_id,
return_ind,
return_disposition_cd,
return_reason_desc,
return_to_dc_ind,
layaway_ind,
order_ind,
upc_store_key,
upc_num,
size_cd,
cross_brand_store_key,
overseas_item_ind,
TD.edl_create_tms,
TD.edl_create_job_nam,
TD.edl_last_update_tms,
TD.edl_last_update_job_nam,
TD.brand_cd
FROM  `p-asna-analytics-002.edl_conform.transaction_detail` TD
LEFT JOIN `p-asna-analytics-002.edl_conform.transaction` TM
ON TD.transaction_key = TM.transaction_key
LEFT JOIN  `p-asna-analytics-002.edl_conform.brand_customer_transaction_xref` BC
ON TD.transaction_key = BC.transaction_key
LEFT JOIN `p-asna-analytics-002.edl_conform.store` ST
ON TD.original_transaction_store_id = ST.store_id
'