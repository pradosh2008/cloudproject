#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

bq query --replace --max_rows 1 --allow_large_results --destination_table edl_stage.pre_atg_order_commerceitemadjustments_new --use_legacy_sql=false <<!
select distinct
               orderid
               ,commerceitemid
               ,catalogrefid
               ,adjustmentdescription
               ,totaladjustment 
               ,CAST(quantityadjusted as INT64) quantityadjusted
               ,batch_id
               ,PARSE_TIMESTAMP("%Y/%m/%d:%H:%M",lastmodifieddate) as lastmodifieddate
      FROM edl_landing.ann_ann_atg_transactions atg
      --where orderid not like '%.orderid%'
!
rc_check $? "Load incremental data from edl_landing into temp table"

#append the old records into the temporary table
bq query --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.pre_atg_order_commerceitemadjustments_new --use_legacy_sql=false <<!
select 
c.orderid
,c.commerceitemid
,c.catalogrefid
,c.adjustmentdescription
,cast(c.totaladjustment as numeric ) as totaladjustment
,c.quantityadjusted
,c.batch_id
,c.lastmodifieddate
from edl_stage.pre_atg_order_commerceitemadjustments c
left join edl_stage.pre_atg_order_commerceitemadjustments_new w
    on  w.orderid = c.orderid
    and w.commerceitemid=c.commerceitemid
    and w.catalogrefid=c.catalogrefid
    and coalesce(w.adjustmentdescription,'')= coalesce(c.adjustmentdescription,'')
        and coalesce(w.totaladjustment,0)=coalesce(c.totaladjustment,0)
        and coalesce(w.quantityadjusted,0) =coalesce(c.quantityadjusted,0)
    and w.lastmodifieddate=c.lastmodifieddate
    and w.batch_id=c.batch_id
where w.orderid is null
!
rc_check $? "append legacy records into the temp table"

#cleansing and archival
bq cp --force edl_stage.pre_atg_order_commerceitemadjustments edl_archive.pre_atg_order_commerceitemadjustments
rc_check $? "archive copy"
bq cp --force edl_stage.pre_atg_order_commerceitemadjustments_new edl_stage.pre_atg_order_commerceitemadjustments
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.pre_atg_order_commerceitemadjustments_new
rc_check $? "drop the temp table"

