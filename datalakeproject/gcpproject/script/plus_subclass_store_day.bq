

#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#creating the landing table
bq load --replace=true --source_format=CSV --skip_leading_rows=1 --quote='' --field_delimiter="|" \
        --schema=${schema_path}/edl_landing/lbca_subclass_store_day.json \
        edl_landing.lbca_subclass_store_day \
        " gs://${default_bucket}/plus/edw/lb_subclass_store_day*.txt.gz"
rc_check $? "EDL_LANDING load for LBCA_SUBCLASS_STORE_DAY Complete"

#loading the temporary table in staging
bq query --max_rows 1 --allow_large_results --destination_table edl_stage.plus_subclass_store_day_new --use_legacy_sql=false <<!
SELECT
  CURR.CHAIN_NBR
, CURR.SUBCLASS_NBR
, CURR.STORE_NBR
, CURR.TRANSACTION_DT
, CURR.SALES_CHANNEL_TYPE_CD
, CURR.PRICE_TYPE_CD
, CURR.STORE_ON_HAND_QTY
, CURR.STORE_ON_HAND_RTL
, CURR.STORE_ON_HAND_CST
, CURR.STORE_ON_HAND_REGULAR_QTY
, CURR.STORE_ON_HAND_REGULAR_RTL
, CURR.STORE_ON_HAND_REGULAR_CST
, CURR.STORE_ON_HAND_MARKUP_QTY
, CURR.STORE_ON_HAND_MARKUP_RTL
, CURR.STORE_ON_HAND_MARKUP_CST
, CURR.STORE_ON_HAND_MARKDOWN_QTY
, CURR.STORE_ON_HAND_MARKDOWN_RTL
, CURR.STORE_ON_HAND_MARKDOWN_CST
, CURR.STORE_ON_HAND_PROMO_QTY
, CURR.STORE_ON_HAND_PROMO_RTL
, CURR.STORE_ON_HAND_PROMO_CST
, CURR.STORE_ON_HAND_CLRNCE_QTY
, CURR.STORE_ON_HAND_CLRNCE_RTL
, CURR.STORE_ON_HAND_CLRNCE_CST
, CURR.STORE_NON_SELLABLE_QTY
, CURR.STORE_NON_SELLABLE_RTL
, CURR.STORE_NON_SELLABLE_CST
, CURR.STORE_MARKUP_QTY
, CURR.STORE_MARKUP_RTL
, CURR.STORE_MARKUP_CST
, CURR.STORE_MARKDOWN_QTY
, CURR.STORE_MARKDOWN_RTL
, CURR.STORE_MARKDOWN_CST
, CURR.PROMO_MARKDOWN_QTY
, CURR.PROMO_MARKDOWN_RTL
, CURR.PROMO_MARKDOWN_CST
, CURR.STORE_CLRNCE_MARKDOWN_QTY
, CURR.STORE_CLRNCE_MARKDOWN_RTL
, CURR.STORE_CLRNCE_MARKDOWN_CST
, CURR.STORE_RECEIPT_QTY
, CURR.STORE_RECEIPT_RTL
, CURR.STORE_RECEIPT_CST
, CURR.STORE_DIRECT_RECEIPT_QTY
, CURR.STORE_DIRECT_RECEIPT_RTL
, CURR.STORE_DIRECT_RECEIPT_CST
, CURR.STORE_TRANSFER_IN_QTY
, CURR.STORE_TRANSFER_IN_RTL
, CURR.STORE_TRANSFER_IN_CST
, CURR.STORE_TRANSFER_OUT_QTY
, CURR.STORE_TRANSFER_OUT_RTL
, CURR.STORE_TRANSFER_OUT_CST
, CURR.STORE_MOOS_QTY
, CURR.STORE_MOOS_RTL
, CURR.STORE_MOOS_CST
, CURR.STORE_ADJUSTMENT_QTY
, CURR.STORE_ADJUSTMENT_RTL
, CURR.STORE_ADJUSTMENT_CST
, CURR.STORE_DAMAGE_QTY
, CURR.STORE_DAMAGE_RTL
, CURR.STORE_DAMAGE_CST
, CURR.STORE_RTV_QTY
, CURR.STORE_RTV_RTL
, CURR.STORE_RTV_CST
, CURR.STORE_OPEN_CLAIM_QTY
, CURR.STORE_OPEN_CLAIM_RTL
, CURR.STORE_OPEN_CLAIM_CST
, CURR.RETURN_QTY
, CURR.RETURN_RTL
, CURR.RETURN_CST
, CURR.NET_SALES_QTY
, CURR.NET_SALES_RTL
, CURR.NET_SALES_CST
, CURR.NET_SALES_REGULAR_QTY
, CURR.NET_SALES_REGULAR_RTL
, CURR.NET_SALES_REGULAR_CST
, CURR.NET_SALES_MARKUP_QTY
, CURR.NET_SALES_MARKUP_RTL
, CURR.NET_SALES_MARKUP_CST
, CURR.NET_SALES_MARKDOWN_QTY
, CURR.NET_SALES_MARKDOWN_RTL
, CURR.NET_SALES_MARKDOWN_CST
, CURR.NET_SALES_PROMO_QTY
, CURR.NET_SALES_PROMO_RTL
, CURR.NET_SALES_PROMO_CST
, CURR.NET_SALES_CLRNCE_QTY
, CURR.NET_SALES_CLRNCE_RTL
, CURR.NET_SALES_CLRNCE_CST
, CURR.SALES_EMPLOYEE_DISCOUNT_QTY
, CURR.SALES_EMPLOYEE_DISCOUNT_RTL
, CURR.SALES_EMPLOYEE_DISCOUNT_CST
, CURR.SALES_ORDER_QTY
, CURR.SALES_ORDER_RTL
, CURR.SALES_ORDER_CST
, CURR.STORE_PRE_ALLOCATED_QTY
, CURR.STORE_PRE_ALLOCATED_RTL
, CURR.STORE_PRE_ALLOCATED_CST
, CURR.STORE_ALLOCATED_QTY
, CURR.STORE_ALLOCATED_RTL
, CURR.STORE_ALLOCATED_CST
, CURR.STORE_CARTON_SHORT_QTY
, CURR.STORE_CARTON_SHORT_RTL
, CURR.STORE_CARTON_SHORT_CST
, CURR.STORE_SHIPMENT_QTY
, CURR.STORE_SHIPMENT_RTL
, CURR.STORE_SHIPMENT_CST
, CURR.STORE_TRANSFER_RESERVED_QTY
, CURR.STORE_TRANSFER_RESERVED_RTL
, CURR.STORE_TRANSFER_RESERVED_CST
, CURR.STORE_TRANSFER_EXPECTED_QTY
, CURR.STORE_TRANSFER_EXPECTED_RTL
, CURR.STORE_TRANSFER_EXPECTED_CST
, CURR.STORE_IN_TRANSIT_QTY
, CURR.STORE_IN_TRANSIT_RTL
, CURR.STORE_IN_TRANSIT_CST
, CURR.STORE_CUSTOMER_RESERVED_QTY
, CURR.STORE_CUSTOMER_RESERVED_RTL
, CURR.STORE_CUSTOMER_RESERVED_CST
, CURR.STORE_PROJECTED_SHRINK_QTY
, CURR.STORE_PROJECTED_SHRINK_RTL
, CURR.STORE_PROJECTED_SHRINK_CST
, CURR.STORE_PHYS_INV_PRELIM_CNT_QTY
, CURR.STORE_PHYS_INV_PRELIM_CNT_RTL
, CURR.STORE_PHYS_INV_PRELIM_CNT_CST
, CURR.STORE_PHYS_INV_FINAL_CNT_QTY
, CURR.STORE_PHYS_INV_FINAL_CNT_RTL
, CURR.STORE_PHYS_INV_FINAL_CNT_CST
, CURR.STR_PHYS_INV_PRELIM_SHRNK_CST
, CURR.STR_PHYS_INV_PRELIM_SHRNK_QTY
, CURR.STR_PHYS_INV_PRELIM_SHRNK_RTL
, CURR.STORE_PHYS_INV_FINAL_SHRNK_CST
, CURR.STORE_PHYS_INV_FINAL_SHRNK_QTY
, CURR.STORE_PHYS_INV_FINAL_SHRNK_RTL
, CURR.STORE_RECEIPT_HIST_QTY
, CURR.STORE_RECEIPT_HIST_RTL
, CURR.STORE_RECEIPT_HIST_CST
, CURR.PERM_MD_CALC_RTL
, CURR.PERM_MD_CALC_QTY
, CURR.PERM_MD_CALC_CST
, CURR.STORE_TO_DC_TRANSFER_OUT_QTY
, CURR.STORE_TO_DC_TRANSFER_OUT_RTL
, CURR.STORE_TO_DC_TRANSFER_OUT_CST
, CURR.STORE_TO_STORE_IN_TRANSIT_QTY
, CURR.STORE_TO_STORE_IN_TRANSIT_RTL
, CURR.STORE_TO_STORE_IN_TRANSIT_CST
, CURR.STORE_TO_STORE_TRANSFER_IN_QTY
, CURR.STORE_TO_STORE_TRANSFER_IN_RTL
, CURR.STORE_TO_STORE_TRANSFER_IN_CST
, CURR.STORE_TO_STORE_TRASFR_OUT_QTY
, CURR.STORE_TO_STORE_TRASFR_OUT_RTL
, CURR.STORE_TO_STORE_TRASFR_OUT_CST
, CURR.STORE_TO_STORE_PRE_ALOCD_QTY
, CURR.STORE_TO_STORE_PRE_ALOCD_RTL
, CURR.STORE_TO_STORE_PRE_ALOCD_CST
, CURR.STORE_TO_STORE_ALLOCATED_QTY
, CURR.STORE_TO_STORE_ALLOCATED_RTL
, CURR.STORE_TO_STORE_ALLOCATED_CST
, CURR.DC_TO_STORE_IN_TRANSIT_QTY
, CURR.DC_TO_STORE_IN_TRANSIT_RTL
, CURR.DC_TO_STORE_IN_TRANSIT_CST
, CURR.DC_TO_STORE_TRANSFER_IN_QTY
, CURR.DC_TO_STORE_TRANSFER_IN_RTL
, CURR.DC_TO_STORE_TRANSFER_IN_CST
, CURR.DC_TO_STORE_PRE_ALLOCATED_QTY
, CURR.DC_TO_STORE_PRE_ALLOCATED_RTL
, CURR.DC_TO_STORE_PRE_ALLOCATED_CST
, CURR.DC_TO_STORE_ALLOCATED_QTY
, CURR.DC_TO_STORE_ALLOCATED_RTL
, CURR.DC_TO_STORE_ALLOCATED_CST
, CURR.LAST_UPDATE_TS
, CURR.EXTRACT_TS
FROM (
       SELECT
         CAST(TRIM(d.CHAIN_NBR)                                                                                            AS INT64  )      AS CHAIN_NBR
       , CAST(TRIM(d.SUBCLASS_NBR)                                                                                         AS NUMERIC)      AS SUBCLASS_NBR
       , CAST(TRIM(d.STORE_NBR)                                                                                            AS NUMERIC)      AS STORE_NBR
       , CASE WHEN TRIM(d.TRANSACTION_DT)                  = '' THEN NULL ELSE PARSE_DATE("%Y-%m-%d",TRIM(d.TRANSACTION_DT))            END AS TRANSACTION_DT
       , TRIM(d.SALES_CHANNEL_TYPE_CD)                                                                                                      AS SALES_CHANNEL_TYPE_CD
       , TRIM(d.PRICE_TYPE_CD)                                                                                                              AS PRICE_TYPE_CD
       , CASE WHEN TRIM(d.STORE_ON_HAND_QTY)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_QTY)              AS INT64  )  END AS STORE_ON_HAND_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_RTL)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_RTL)              AS NUMERIC)  END AS STORE_ON_HAND_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_CST)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_CST)              AS NUMERIC)  END AS STORE_ON_HAND_CST
       , CASE WHEN TRIM(d.STORE_ON_HAND_REGULAR_QTY)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_REGULAR_QTY)      AS INT64  )  END AS STORE_ON_HAND_REGULAR_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_REGULAR_RTL)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_REGULAR_RTL)      AS NUMERIC)  END AS STORE_ON_HAND_REGULAR_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_REGULAR_CST)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_REGULAR_CST)      AS NUMERIC)  END AS STORE_ON_HAND_REGULAR_CST
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKUP_QTY)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKUP_QTY)       AS INT64  )  END AS STORE_ON_HAND_MARKUP_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKUP_RTL)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKUP_RTL)       AS NUMERIC)  END AS STORE_ON_HAND_MARKUP_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKUP_CST)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKUP_CST)       AS NUMERIC)  END AS STORE_ON_HAND_MARKUP_CST
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKDOWN_QTY)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKDOWN_QTY)     AS INT64  )  END AS STORE_ON_HAND_MARKDOWN_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKDOWN_RTL)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKDOWN_RTL)     AS NUMERIC)  END AS STORE_ON_HAND_MARKDOWN_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_MARKDOWN_CST)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_MARKDOWN_CST)     AS NUMERIC)  END AS STORE_ON_HAND_MARKDOWN_CST
       , CASE WHEN TRIM(d.STORE_ON_HAND_PROMO_QTY)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_PROMO_QTY)        AS INT64  )  END AS STORE_ON_HAND_PROMO_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_PROMO_RTL)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_PROMO_RTL)        AS NUMERIC)  END AS STORE_ON_HAND_PROMO_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_PROMO_CST)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_PROMO_CST)        AS NUMERIC)  END AS STORE_ON_HAND_PROMO_CST
       , CASE WHEN TRIM(d.STORE_ON_HAND_CLRNCE_QTY)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_CLRNCE_QTY)       AS INT64  )  END AS STORE_ON_HAND_CLRNCE_QTY
       , CASE WHEN TRIM(d.STORE_ON_HAND_CLRNCE_RTL)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_CLRNCE_RTL)       AS NUMERIC)  END AS STORE_ON_HAND_CLRNCE_RTL
       , CASE WHEN TRIM(d.STORE_ON_HAND_CLRNCE_CST)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_ON_HAND_CLRNCE_CST)       AS NUMERIC)  END AS STORE_ON_HAND_CLRNCE_CST
       , CASE WHEN TRIM(d.STORE_NON_SELLABLE_QTY)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_NON_SELLABLE_QTY)         AS INT64  )  END AS STORE_NON_SELLABLE_QTY
       , CASE WHEN TRIM(d.STORE_NON_SELLABLE_RTL)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_NON_SELLABLE_RTL)         AS NUMERIC)  END AS STORE_NON_SELLABLE_RTL
       , CASE WHEN TRIM(d.STORE_NON_SELLABLE_CST)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_NON_SELLABLE_CST)         AS NUMERIC)  END AS STORE_NON_SELLABLE_CST
       , CASE WHEN TRIM(d.STORE_MARKUP_QTY)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKUP_QTY)               AS INT64  )  END AS STORE_MARKUP_QTY
       , CASE WHEN TRIM(d.STORE_MARKUP_RTL)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKUP_RTL)               AS NUMERIC)  END AS STORE_MARKUP_RTL
       , CASE WHEN TRIM(d.STORE_MARKUP_CST)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKUP_CST)               AS NUMERIC)  END AS STORE_MARKUP_CST
       , CASE WHEN TRIM(d.STORE_MARKDOWN_QTY)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKDOWN_QTY)             AS INT64  )  END AS STORE_MARKDOWN_QTY
       , CASE WHEN TRIM(d.STORE_MARKDOWN_RTL)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKDOWN_RTL)             AS NUMERIC)  END AS STORE_MARKDOWN_RTL
       , CASE WHEN TRIM(d.STORE_MARKDOWN_CST)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_MARKDOWN_CST)             AS NUMERIC)  END AS STORE_MARKDOWN_CST
       , CASE WHEN TRIM(d.PROMO_MARKDOWN_QTY)              = '' THEN NULL ELSE CAST(TRIM(d.PROMO_MARKDOWN_QTY)             AS INT64  )  END AS PROMO_MARKDOWN_QTY
       , CASE WHEN TRIM(d.PROMO_MARKDOWN_RTL)              = '' THEN NULL ELSE CAST(TRIM(d.PROMO_MARKDOWN_RTL)             AS NUMERIC)  END AS PROMO_MARKDOWN_RTL
       , CASE WHEN TRIM(d.PROMO_MARKDOWN_CST)              = '' THEN NULL ELSE CAST(TRIM(d.PROMO_MARKDOWN_CST)             AS NUMERIC)  END AS PROMO_MARKDOWN_CST
       , CASE WHEN TRIM(d.STORE_CLRNCE_MARKDOWN_QTY)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_CLRNCE_MARKDOWN_QTY)      AS INT64  )  END AS STORE_CLRNCE_MARKDOWN_QTY
       , CASE WHEN TRIM(d.STORE_CLRNCE_MARKDOWN_RTL)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_CLRNCE_MARKDOWN_RTL)      AS NUMERIC)  END AS STORE_CLRNCE_MARKDOWN_RTL
       , CASE WHEN TRIM(d.STORE_CLRNCE_MARKDOWN_CST)       = '' THEN NULL ELSE CAST(TRIM(d.STORE_CLRNCE_MARKDOWN_CST)      AS NUMERIC)  END AS STORE_CLRNCE_MARKDOWN_CST
       , CASE WHEN TRIM(d.STORE_RECEIPT_QTY)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_QTY)              AS INT64  )  END AS STORE_RECEIPT_QTY
       , CASE WHEN TRIM(d.STORE_RECEIPT_RTL)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_RTL)              AS NUMERIC)  END AS STORE_RECEIPT_RTL
       , CASE WHEN TRIM(d.STORE_RECEIPT_CST)               = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_CST)              AS NUMERIC)  END AS STORE_RECEIPT_CST
       , CASE WHEN TRIM(d.STORE_DIRECT_RECEIPT_QTY)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_DIRECT_RECEIPT_QTY)       AS INT64  )  END AS STORE_DIRECT_RECEIPT_QTY
       , CASE WHEN TRIM(d.STORE_DIRECT_RECEIPT_RTL)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_DIRECT_RECEIPT_RTL)       AS NUMERIC)  END AS STORE_DIRECT_RECEIPT_RTL
       , CASE WHEN TRIM(d.STORE_DIRECT_RECEIPT_CST)        = '' THEN NULL ELSE CAST(TRIM(d.STORE_DIRECT_RECEIPT_CST)       AS NUMERIC)  END AS STORE_DIRECT_RECEIPT_CST
       , CASE WHEN TRIM(d.STORE_TRANSFER_IN_QTY)           = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_IN_QTY)          AS INT64  )  END AS STORE_TRANSFER_IN_QTY
       , CASE WHEN TRIM(d.STORE_TRANSFER_IN_RTL)           = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_IN_RTL)          AS NUMERIC)  END AS STORE_TRANSFER_IN_RTL
       , CASE WHEN TRIM(d.STORE_TRANSFER_IN_CST)           = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_IN_CST)          AS NUMERIC)  END AS STORE_TRANSFER_IN_CST
       , CASE WHEN TRIM(d.STORE_TRANSFER_OUT_QTY)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_OUT_QTY)         AS INT64  )  END AS STORE_TRANSFER_OUT_QTY
       , CASE WHEN TRIM(d.STORE_TRANSFER_OUT_RTL)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_OUT_RTL)         AS NUMERIC)  END AS STORE_TRANSFER_OUT_RTL
       , CASE WHEN TRIM(d.STORE_TRANSFER_OUT_CST)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_OUT_CST)         AS NUMERIC)  END AS STORE_TRANSFER_OUT_CST
       , CASE WHEN TRIM(d.STORE_MOOS_QTY)                  = '' THEN NULL ELSE CAST(TRIM(d.STORE_MOOS_QTY)                 AS INT64  )  END AS STORE_MOOS_QTY
       , CASE WHEN TRIM(d.STORE_MOOS_RTL)                  = '' THEN NULL ELSE CAST(TRIM(d.STORE_MOOS_RTL)                 AS NUMERIC)  END AS STORE_MOOS_RTL
       , CASE WHEN TRIM(d.STORE_MOOS_CST)                  = '' THEN NULL ELSE CAST(TRIM(d.STORE_MOOS_CST)                 AS NUMERIC)  END AS STORE_MOOS_CST
       , CASE WHEN TRIM(d.STORE_ADJUSTMENT_QTY)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_ADJUSTMENT_QTY)           AS INT64  )  END AS STORE_ADJUSTMENT_QTY
       , CASE WHEN TRIM(d.STORE_ADJUSTMENT_RTL)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_ADJUSTMENT_RTL)           AS NUMERIC)  END AS STORE_ADJUSTMENT_RTL
       , CASE WHEN TRIM(d.STORE_ADJUSTMENT_CST)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_ADJUSTMENT_CST)           AS NUMERIC)  END AS STORE_ADJUSTMENT_CST
       , CASE WHEN TRIM(d.STORE_DAMAGE_QTY)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_DAMAGE_QTY)               AS INT64  )  END AS STORE_DAMAGE_QTY
       , CASE WHEN TRIM(d.STORE_DAMAGE_RTL)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_DAMAGE_RTL)               AS NUMERIC)  END AS STORE_DAMAGE_RTL
       , CASE WHEN TRIM(d.STORE_DAMAGE_CST)                = '' THEN NULL ELSE CAST(TRIM(d.STORE_DAMAGE_CST)               AS NUMERIC)  END AS STORE_DAMAGE_CST
       , CASE WHEN TRIM(d.STORE_RTV_QTY)                   = '' THEN NULL ELSE CAST(TRIM(d.STORE_RTV_QTY)                  AS INT64  )  END AS STORE_RTV_QTY
       , CASE WHEN TRIM(d.STORE_RTV_RTL)                   = '' THEN NULL ELSE CAST(TRIM(d.STORE_RTV_RTL)                  AS NUMERIC)  END AS STORE_RTV_RTL
       , CASE WHEN TRIM(d.STORE_RTV_CST)                   = '' THEN NULL ELSE CAST(TRIM(d.STORE_RTV_CST)                  AS NUMERIC)  END AS STORE_RTV_CST
       , CASE WHEN TRIM(d.STORE_OPEN_CLAIM_QTY)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_OPEN_CLAIM_QTY)           AS INT64  )  END AS STORE_OPEN_CLAIM_QTY
       , CASE WHEN TRIM(d.STORE_OPEN_CLAIM_RTL)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_OPEN_CLAIM_RTL)           AS NUMERIC)  END AS STORE_OPEN_CLAIM_RTL
       , CASE WHEN TRIM(d.STORE_OPEN_CLAIM_CST)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_OPEN_CLAIM_CST)           AS NUMERIC)  END AS STORE_OPEN_CLAIM_CST
       , CASE WHEN TRIM(d.RETURN_QTY)                      = '' THEN NULL ELSE CAST(TRIM(d.RETURN_QTY)                     AS INT64  )  END AS RETURN_QTY
       , CASE WHEN TRIM(d.RETURN_RTL)                      = '' THEN NULL ELSE CAST(TRIM(d.RETURN_RTL)                     AS NUMERIC)  END AS RETURN_RTL
       , CASE WHEN TRIM(d.RETURN_CST)                      = '' THEN NULL ELSE CAST(TRIM(d.RETURN_CST)                     AS NUMERIC)  END AS RETURN_CST
       , CASE WHEN TRIM(d.NET_SALES_QTY)                   = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_QTY)                  AS INT64  )  END AS NET_SALES_QTY
       , CASE WHEN TRIM(d.NET_SALES_RTL)                   = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_RTL)                  AS NUMERIC)  END AS NET_SALES_RTL
       , CASE WHEN TRIM(d.NET_SALES_CST)                   = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_CST)                  AS NUMERIC)  END AS NET_SALES_CST
       , CASE WHEN TRIM(d.NET_SALES_REGULAR_QTY)           = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_REGULAR_QTY)          AS INT64  )  END AS NET_SALES_REGULAR_QTY
       , CASE WHEN TRIM(d.NET_SALES_REGULAR_RTL)           = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_REGULAR_RTL)          AS NUMERIC)  END AS NET_SALES_REGULAR_RTL
       , CASE WHEN TRIM(d.NET_SALES_REGULAR_CST)           = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_REGULAR_CST)          AS NUMERIC)  END AS NET_SALES_REGULAR_CST
       , CASE WHEN TRIM(d.NET_SALES_MARKUP_QTY)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKUP_QTY)           AS INT64  )  END AS NET_SALES_MARKUP_QTY
       , CASE WHEN TRIM(d.NET_SALES_MARKUP_RTL)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKUP_RTL)           AS NUMERIC)  END AS NET_SALES_MARKUP_RTL
       , CASE WHEN TRIM(d.NET_SALES_MARKUP_CST)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKUP_CST)           AS NUMERIC)  END AS NET_SALES_MARKUP_CST
       , CASE WHEN TRIM(d.NET_SALES_MARKDOWN_QTY)          = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKDOWN_QTY)         AS INT64  )  END AS NET_SALES_MARKDOWN_QTY
       , CASE WHEN TRIM(d.NET_SALES_MARKDOWN_RTL)          = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKDOWN_RTL)         AS NUMERIC)  END AS NET_SALES_MARKDOWN_RTL
       , CASE WHEN TRIM(d.NET_SALES_MARKDOWN_CST)          = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_MARKDOWN_CST)         AS NUMERIC)  END AS NET_SALES_MARKDOWN_CST
       , CASE WHEN TRIM(d.NET_SALES_PROMO_QTY)             = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_PROMO_QTY)            AS INT64  )  END AS NET_SALES_PROMO_QTY
       , CASE WHEN TRIM(d.NET_SALES_PROMO_RTL)             = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_PROMO_RTL)            AS NUMERIC)  END AS NET_SALES_PROMO_RTL
       , CASE WHEN TRIM(d.NET_SALES_PROMO_CST)             = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_PROMO_CST)            AS NUMERIC)  END AS NET_SALES_PROMO_CST
       , CASE WHEN TRIM(d.NET_SALES_CLRNCE_QTY)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_CLRNCE_QTY)           AS INT64  )  END AS NET_SALES_CLRNCE_QTY
       , CASE WHEN TRIM(d.NET_SALES_CLRNCE_RTL)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_CLRNCE_RTL)           AS NUMERIC)  END AS NET_SALES_CLRNCE_RTL
       , CASE WHEN TRIM(d.NET_SALES_CLRNCE_CST)            = '' THEN NULL ELSE CAST(TRIM(d.NET_SALES_CLRNCE_CST)           AS NUMERIC)  END AS NET_SALES_CLRNCE_CST
       , CASE WHEN TRIM(d.SALES_EMPLOYEE_DISCOUNT_QTY)     = '' THEN NULL ELSE CAST(TRIM(d.SALES_EMPLOYEE_DISCOUNT_QTY)    AS INT64  )  END AS SALES_EMPLOYEE_DISCOUNT_QTY
       , CASE WHEN TRIM(d.SALES_EMPLOYEE_DISCOUNT_RTL)     = '' THEN NULL ELSE CAST(TRIM(d.SALES_EMPLOYEE_DISCOUNT_RTL)    AS NUMERIC)  END AS SALES_EMPLOYEE_DISCOUNT_RTL
       , CASE WHEN TRIM(d.SALES_EMPLOYEE_DISCOUNT_CST)     = '' THEN NULL ELSE CAST(TRIM(d.SALES_EMPLOYEE_DISCOUNT_CST)    AS NUMERIC)  END AS SALES_EMPLOYEE_DISCOUNT_CST
       , CASE WHEN TRIM(d.SALES_ORDER_QTY)                 = '' THEN NULL ELSE CAST(TRIM(d.SALES_ORDER_QTY)                AS INT64  )  END AS SALES_ORDER_QTY
       , CASE WHEN TRIM(d.SALES_ORDER_RTL)                 = '' THEN NULL ELSE CAST(TRIM(d.SALES_ORDER_RTL)                AS NUMERIC)  END AS SALES_ORDER_RTL
       , CASE WHEN TRIM(d.SALES_ORDER_CST)                 = '' THEN NULL ELSE CAST(TRIM(d.SALES_ORDER_CST)                AS NUMERIC)  END AS SALES_ORDER_CST
       , CASE WHEN TRIM(d.STORE_PRE_ALLOCATED_QTY)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_PRE_ALLOCATED_QTY)        AS INT64  )  END AS STORE_PRE_ALLOCATED_QTY
       , CASE WHEN TRIM(d.STORE_PRE_ALLOCATED_RTL)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_PRE_ALLOCATED_RTL)        AS NUMERIC)  END AS STORE_PRE_ALLOCATED_RTL
       , CASE WHEN TRIM(d.STORE_PRE_ALLOCATED_CST)         = '' THEN NULL ELSE CAST(TRIM(d.STORE_PRE_ALLOCATED_CST)        AS NUMERIC)  END AS STORE_PRE_ALLOCATED_CST
       , CASE WHEN TRIM(d.STORE_ALLOCATED_QTY)             = '' THEN NULL ELSE CAST(TRIM(d.STORE_ALLOCATED_QTY)            AS INT64  )  END AS STORE_ALLOCATED_QTY
       , CASE WHEN TRIM(d.STORE_ALLOCATED_RTL)             = '' THEN NULL ELSE CAST(TRIM(d.STORE_ALLOCATED_RTL)            AS NUMERIC)  END AS STORE_ALLOCATED_RTL
       , CASE WHEN TRIM(d.STORE_ALLOCATED_CST)             = '' THEN NULL ELSE CAST(TRIM(d.STORE_ALLOCATED_CST)            AS NUMERIC)  END AS STORE_ALLOCATED_CST
       , CASE WHEN TRIM(d.STORE_CARTON_SHORT_QTY)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_CARTON_SHORT_QTY)         AS INT64  )  END AS STORE_CARTON_SHORT_QTY
       , CASE WHEN TRIM(d.STORE_CARTON_SHORT_RTL)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_CARTON_SHORT_RTL)         AS NUMERIC)  END AS STORE_CARTON_SHORT_RTL
       , CASE WHEN TRIM(d.STORE_CARTON_SHORT_CST)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_CARTON_SHORT_CST)         AS NUMERIC)  END AS STORE_CARTON_SHORT_CST
       , CASE WHEN TRIM(d.STORE_SHIPMENT_QTY)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_SHIPMENT_QTY)             AS INT64  )  END AS STORE_SHIPMENT_QTY
       , CASE WHEN TRIM(d.STORE_SHIPMENT_RTL)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_SHIPMENT_RTL)             AS NUMERIC)  END AS STORE_SHIPMENT_RTL
       , CASE WHEN TRIM(d.STORE_SHIPMENT_CST)              = '' THEN NULL ELSE CAST(TRIM(d.STORE_SHIPMENT_CST)             AS NUMERIC)  END AS STORE_SHIPMENT_CST
       , CASE WHEN TRIM(d.STORE_TRANSFER_RESERVED_QTY)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_RESERVED_QTY)    AS INT64  )  END AS STORE_TRANSFER_RESERVED_QTY
       , CASE WHEN TRIM(d.STORE_TRANSFER_RESERVED_RTL)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_RESERVED_RTL)    AS NUMERIC)  END AS STORE_TRANSFER_RESERVED_RTL
       , CASE WHEN TRIM(d.STORE_TRANSFER_RESERVED_CST)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_RESERVED_CST)    AS NUMERIC)  END AS STORE_TRANSFER_RESERVED_CST
       , CASE WHEN TRIM(d.STORE_TRANSFER_EXPECTED_QTY)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_EXPECTED_QTY)    AS INT64  )  END AS STORE_TRANSFER_EXPECTED_QTY
       , CASE WHEN TRIM(d.STORE_TRANSFER_EXPECTED_RTL)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_EXPECTED_RTL)    AS NUMERIC)  END AS STORE_TRANSFER_EXPECTED_RTL
       , CASE WHEN TRIM(d.STORE_TRANSFER_EXPECTED_CST)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_TRANSFER_EXPECTED_CST)    AS NUMERIC)  END AS STORE_TRANSFER_EXPECTED_CST
       , CASE WHEN TRIM(d.STORE_IN_TRANSIT_QTY)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_IN_TRANSIT_QTY)           AS INT64  )  END AS STORE_IN_TRANSIT_QTY
       , CASE WHEN TRIM(d.STORE_IN_TRANSIT_RTL)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_IN_TRANSIT_RTL)           AS NUMERIC)  END AS STORE_IN_TRANSIT_RTL
       , CASE WHEN TRIM(d.STORE_IN_TRANSIT_CST)            = '' THEN NULL ELSE CAST(TRIM(d.STORE_IN_TRANSIT_CST)           AS NUMERIC)  END AS STORE_IN_TRANSIT_CST
       , CASE WHEN TRIM(d.STORE_CUSTOMER_RESERVED_QTY)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_CUSTOMER_RESERVED_QTY)    AS INT64  )  END AS STORE_CUSTOMER_RESERVED_QTY
       , CASE WHEN TRIM(d.STORE_CUSTOMER_RESERVED_RTL)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_CUSTOMER_RESERVED_RTL)    AS NUMERIC)  END AS STORE_CUSTOMER_RESERVED_RTL
       , CASE WHEN TRIM(d.STORE_CUSTOMER_RESERVED_CST)     = '' THEN NULL ELSE CAST(TRIM(d.STORE_CUSTOMER_RESERVED_CST)    AS NUMERIC)  END AS STORE_CUSTOMER_RESERVED_CST
       , CASE WHEN TRIM(d.STORE_PROJECTED_SHRINK_QTY)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_PROJECTED_SHRINK_QTY)     AS INT64  )  END AS STORE_PROJECTED_SHRINK_QTY
       , CASE WHEN TRIM(d.STORE_PROJECTED_SHRINK_RTL)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_PROJECTED_SHRINK_RTL)     AS NUMERIC)  END AS STORE_PROJECTED_SHRINK_RTL
       , CASE WHEN TRIM(d.STORE_PROJECTED_SHRINK_CST)      = '' THEN NULL ELSE CAST(TRIM(d.STORE_PROJECTED_SHRINK_CST)     AS NUMERIC)  END AS STORE_PROJECTED_SHRINK_CST
       , CASE WHEN TRIM(d.STORE_PHYS_INV_PRELIM_CNT_QTY)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_PRELIM_CNT_QTY)  AS INT64  )  END AS STORE_PHYS_INV_PRELIM_CNT_QTY
       , CASE WHEN TRIM(d.STORE_PHYS_INV_PRELIM_CNT_RTL)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_PRELIM_CNT_RTL)  AS NUMERIC)  END AS STORE_PHYS_INV_PRELIM_CNT_RTL
       , CASE WHEN TRIM(d.STORE_PHYS_INV_PRELIM_CNT_CST)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_PRELIM_CNT_CST)  AS NUMERIC)  END AS STORE_PHYS_INV_PRELIM_CNT_CST
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_CNT_QTY)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_CNT_QTY)   AS INT64  )  END AS STORE_PHYS_INV_FINAL_CNT_QTY
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_CNT_RTL)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_CNT_RTL)   AS NUMERIC)  END AS STORE_PHYS_INV_FINAL_CNT_RTL
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_CNT_CST)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_CNT_CST)   AS NUMERIC)  END AS STORE_PHYS_INV_FINAL_CNT_CST
       , CASE WHEN TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_CST)   = '' THEN NULL ELSE CAST(TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_CST)  AS NUMERIC)  END AS STR_PHYS_INV_PRELIM_SHRNK_CST
       , CASE WHEN TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_QTY)   = '' THEN NULL ELSE CAST(TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_QTY)  AS INT64  )  END AS STR_PHYS_INV_PRELIM_SHRNK_QTY
       , CASE WHEN TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_RTL)   = '' THEN NULL ELSE CAST(TRIM(d.STR_PHYS_INV_PRELIM_SHRNK_RTL)  AS NUMERIC)  END AS STR_PHYS_INV_PRELIM_SHRNK_RTL
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_CST)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_CST) AS NUMERIC)  END AS STORE_PHYS_INV_FINAL_SHRNK_CST
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_QTY)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_QTY) AS INT64)    END AS STORE_PHYS_INV_FINAL_SHRNK_QTY
       , CASE WHEN TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_RTL)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_PHYS_INV_FINAL_SHRNK_RTL) AS NUMERIC)  END AS STORE_PHYS_INV_FINAL_SHRNK_RTL
       , CASE WHEN TRIM(d.STORE_RECEIPT_HIST_QTY)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_HIST_QTY)         AS INT64  )  END AS STORE_RECEIPT_HIST_QTY
       , CASE WHEN TRIM(d.STORE_RECEIPT_HIST_RTL)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_HIST_RTL)         AS NUMERIC)  END AS STORE_RECEIPT_HIST_RTL
       , CASE WHEN TRIM(d.STORE_RECEIPT_HIST_CST)          = '' THEN NULL ELSE CAST(TRIM(d.STORE_RECEIPT_HIST_CST)         AS NUMERIC)  END AS STORE_RECEIPT_HIST_CST
       , CASE WHEN TRIM(d.PERM_MD_CALC_RTL)                = '' THEN NULL ELSE CAST(TRIM(d.PERM_MD_CALC_RTL)               AS NUMERIC)  END AS PERM_MD_CALC_RTL
       , CASE WHEN TRIM(d.PERM_MD_CALC_QTY)                = '' THEN NULL ELSE CAST(TRIM(d.PERM_MD_CALC_QTY)               AS INT64  )  END AS PERM_MD_CALC_QTY
       , CASE WHEN TRIM(d.PERM_MD_CALC_CST)                = '' THEN NULL ELSE CAST(TRIM(d.PERM_MD_CALC_CST)               AS NUMERIC)  END AS PERM_MD_CALC_CST
       , CASE WHEN TRIM(d.STORE_TO_DC_TRANSFER_OUT_QTY)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_DC_TRANSFER_OUT_QTY)   AS INT64  )  END AS STORE_TO_DC_TRANSFER_OUT_QTY
       , CASE WHEN TRIM(d.STORE_TO_DC_TRANSFER_OUT_RTL)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_DC_TRANSFER_OUT_RTL)   AS NUMERIC)  END AS STORE_TO_DC_TRANSFER_OUT_RTL
       , CASE WHEN TRIM(d.STORE_TO_DC_TRANSFER_OUT_CST)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_DC_TRANSFER_OUT_CST)   AS NUMERIC)  END AS STORE_TO_DC_TRANSFER_OUT_CST
       , CASE WHEN TRIM(d.STORE_TO_STORE_IN_TRANSIT_QTY)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_IN_TRANSIT_QTY)  AS INT64  )  END AS STORE_TO_STORE_IN_TRANSIT_QTY
       , CASE WHEN TRIM(d.STORE_TO_STORE_IN_TRANSIT_RTL)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_IN_TRANSIT_RTL)  AS NUMERIC)  END AS STORE_TO_STORE_IN_TRANSIT_RTL
       , CASE WHEN TRIM(d.STORE_TO_STORE_IN_TRANSIT_CST)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_IN_TRANSIT_CST)  AS NUMERIC)  END AS STORE_TO_STORE_IN_TRANSIT_CST
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRANSFER_IN_QTY)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRANSFER_IN_QTY) AS INT64  )  END AS STORE_TO_STORE_TRANSFER_IN_QTY
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRANSFER_IN_RTL)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRANSFER_IN_RTL) AS NUMERIC)  END AS STORE_TO_STORE_TRANSFER_IN_RTL
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRANSFER_IN_CST)  = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRANSFER_IN_CST) AS NUMERIC)  END AS STORE_TO_STORE_TRANSFER_IN_CST
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRASFR_OUT_QTY)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRASFR_OUT_QTY)  AS INT64  )  END AS STORE_TO_STORE_TRASFR_OUT_QTY
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRASFR_OUT_RTL)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRASFR_OUT_RTL)  AS NUMERIC)  END AS STORE_TO_STORE_TRASFR_OUT_RTL
       , CASE WHEN TRIM(d.STORE_TO_STORE_TRASFR_OUT_CST)   = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_TRASFR_OUT_CST)  AS NUMERIC)  END AS STORE_TO_STORE_TRASFR_OUT_CST
       , CASE WHEN TRIM(d.STORE_TO_STORE_PRE_ALOCD_QTY)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_PRE_ALOCD_QTY)   AS INT64  )  END AS STORE_TO_STORE_PRE_ALOCD_QTY
       , CASE WHEN TRIM(d.STORE_TO_STORE_PRE_ALOCD_RTL)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_PRE_ALOCD_RTL)   AS NUMERIC)  END AS STORE_TO_STORE_PRE_ALOCD_RTL
       , CASE WHEN TRIM(d.STORE_TO_STORE_PRE_ALOCD_CST)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_PRE_ALOCD_CST)   AS NUMERIC)  END AS STORE_TO_STORE_PRE_ALOCD_CST
       , CASE WHEN TRIM(d.STORE_TO_STORE_ALLOCATED_QTY)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_ALLOCATED_QTY)   AS INT64  )  END AS STORE_TO_STORE_ALLOCATED_QTY
       , CASE WHEN TRIM(d.STORE_TO_STORE_ALLOCATED_RTL)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_ALLOCATED_RTL)   AS NUMERIC)  END AS STORE_TO_STORE_ALLOCATED_RTL
       , CASE WHEN TRIM(d.STORE_TO_STORE_ALLOCATED_CST)    = '' THEN NULL ELSE CAST(TRIM(d.STORE_TO_STORE_ALLOCATED_CST)   AS NUMERIC)  END AS STORE_TO_STORE_ALLOCATED_CST
       , CASE WHEN TRIM(d.DC_TO_STORE_IN_TRANSIT_QTY)      = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_IN_TRANSIT_QTY)     AS INT64  )  END AS DC_TO_STORE_IN_TRANSIT_QTY
       , CASE WHEN TRIM(d.DC_TO_STORE_IN_TRANSIT_RTL)      = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_IN_TRANSIT_RTL)     AS NUMERIC)  END AS DC_TO_STORE_IN_TRANSIT_RTL
       , CASE WHEN TRIM(d.DC_TO_STORE_IN_TRANSIT_CST)      = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_IN_TRANSIT_CST)     AS NUMERIC)  END AS DC_TO_STORE_IN_TRANSIT_CST
       , CASE WHEN TRIM(d.DC_TO_STORE_TRANSFER_IN_QTY)     = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_TRANSFER_IN_QTY)    AS INT64  )  END AS DC_TO_STORE_TRANSFER_IN_QTY
       , CASE WHEN TRIM(d.DC_TO_STORE_TRANSFER_IN_RTL)     = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_TRANSFER_IN_RTL)    AS NUMERIC)  END AS DC_TO_STORE_TRANSFER_IN_RTL
       , CASE WHEN TRIM(d.DC_TO_STORE_TRANSFER_IN_CST)     = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_TRANSFER_IN_CST)    AS NUMERIC)  END AS DC_TO_STORE_TRANSFER_IN_CST
       , CASE WHEN TRIM(d.DC_TO_STORE_PRE_ALLOCATED_QTY)   = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_PRE_ALLOCATED_QTY)  AS INT64  )  END AS DC_TO_STORE_PRE_ALLOCATED_QTY
       , CASE WHEN TRIM(d.DC_TO_STORE_PRE_ALLOCATED_RTL)   = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_PRE_ALLOCATED_RTL)  AS NUMERIC)  END AS DC_TO_STORE_PRE_ALLOCATED_RTL
       , CASE WHEN TRIM(d.DC_TO_STORE_PRE_ALLOCATED_CST)   = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_PRE_ALLOCATED_CST)  AS NUMERIC)  END AS DC_TO_STORE_PRE_ALLOCATED_CST
       , CASE WHEN TRIM(d.DC_TO_STORE_ALLOCATED_QTY)       = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_ALLOCATED_QTY)      AS INT64  )  END AS DC_TO_STORE_ALLOCATED_QTY
       , CASE WHEN TRIM(d.DC_TO_STORE_ALLOCATED_RTL)       = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_ALLOCATED_RTL)      AS NUMERIC)  END AS DC_TO_STORE_ALLOCATED_RTL
       , CASE WHEN TRIM(d.DC_TO_STORE_ALLOCATED_CST)       = '' THEN NULL ELSE CAST(TRIM(d.DC_TO_STORE_ALLOCATED_CST)      AS NUMERIC)  END AS DC_TO_STORE_ALLOCATED_CST
       , CASE WHEN TRIM(d.LAST_UPDATE_TS)                  = '' THEN NULL ELSE PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",d.LAST_UPDATE_TS,"America/New_York") END AS LAST_UPDATE_TS
       , CASE WHEN TRIM(d.EXTRACT_TS)                      = '' THEN NULL ELSE PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",d.EXTRACT_TS,"America/New_York")     END AS EXTRACT_TS
       , ROW_NUMBER() OVER (PARTITION BY  d.CHAIN_NBR
                                        , d.SUBCLASS_NBR
                                        , d.STORE_NBR
                                        , d.TRANSACTION_DT
                                        , d.SALES_CHANNEL_TYPE_CD
                                        , d.PRICE_TYPE_CD
                            ORDER BY d.LAST_UPDATE_TS desc
                           )                                      as ROW_NUM
       FROM edl_landing.lbca_subclass_store_day d
     ) CURR
WHERE ROW_NUM = 1
!
rc_check $? "Load incremental data from edl_landing into temp table"

#Merge/UPSert old records into new stage table
bq query  --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.plus_subclass_store_day_new --use_legacy_sql=false <<!
select stg.*
from edl_stage.plus_subclass_store_day stg
left join (
            select 
            TRANSACTION_DT
            from edl_stage.plus_subclass_store_day_new
            group by TRANSACTION_DT
          ) temp
          ON TEMP.TRANSACTION_DT = STG.TRANSACTION_DT
where TEMP.TRANSACTION_DT is null
!
rc_check $? "Merge or UPSert old records into new stage table"

#cleansing and archival
bq cp --force edl_stage.plus_subclass_store_day edl_archive.plus_subclass_store_day
rc_check $? "archive copy"
bq cp --force edl_stage.plus_subclass_store_day_new edl_stage.plus_subclass_store_day
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.plus_subclass_store_day_new
rc_check $? "drop the temp table"

##Archive Files in Bucket which are processed or Consumed
archive_bucket_files "gs://${default_bucket}/plus/edw/lb_subclass_store_day*.txt.gz"





