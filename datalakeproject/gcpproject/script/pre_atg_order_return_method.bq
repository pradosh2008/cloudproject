#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

bq query  --max_rows 1 --allow_large_results --destination_table edl_stage.pre_atg_order_return_method_new --use_legacy_sql=false <<!
    select distinct
            returnid
            ,orderid
            ,sumoftotalrefundamount
            ,method
            ,batch_id
    from  edl_landing.ann_atg_returns atg
!
rc_check $? "Load incremental data from edl_landing into temp table"

#append the old records into the temporary table
bq query --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.pre_atg_order_return_method_new --use_legacy_sql=false <<!
select c.returnid
            ,c.orderid
            ,CAST(c.sumoftotalrefundamount as numeric) sumoftotalrefundamount
            ,c.method
            ,c.batch_id
from edl_stage.pre_atg_order_return_method c
left join edl_stage.pre_atg_order_return_method_new w
    on  w.returnid = c.returnid
    and w.method=c.method
    and w.batch_id=c.batch_id
where w.orderid is null
!
rc_check $? "append legacy records into the temp table"

#cleansing and archival

bq cp --force edl_stage.pre_atg_order_return_method edl_archive.pre_atg_order_return_method
rc_check $? "archive copy"
bq cp --force edl_stage.pre_atg_order_return_method_new edl_stage.pre_atg_order_return_method
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.pre_atg_order_return_method_new
rc_check $? "drop the temp table"


