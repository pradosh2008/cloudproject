#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#creating the landing table
bq load --replace=true --source_format=CSV --skip_leading_rows=1 --field_delimiter="|" --quote="" \
        --schema=${schema_path}/edl_landing/lbca_sku_attr_channel.json \
        edl_landing.lb_sku_attr_channel  \
        "gs://${default_bucket}/plus/edw/lb_sku_attr_channel*.txt.gz"
rc_check $? "Load edl_landing LB"

bq load --replace=true --source_format=CSV --skip_leading_rows=1 --field_delimiter="|" --quote="" \
        --schema=${schema_path}/edl_landing/lbca_sku_attr_channel.json \
        edl_landing.ca_sku_attr_channel  \
        "gs://${default_bucket}/plus/edw/ca_sku_attr_channel*.txt.gz"
rc_check $? "Load edl_landing CA"

#loading the temporary table in staging ( it has both new and updated records)
bq query --max_rows 1 --allow_large_results --destination_table edl_stage.lbca_sku_attr_channel_new --use_legacy_sql=false <<!
SELECT
 stg.chain_nbr 
,stg.sku_nbr 
,stg.uda_nbr 
,stg.uda_value_nbr 
,stg.uda_value_desc 
,stg.attribute_nbr 
,stg.attribute_nm 
,stg.uda_desc 
,stg.extract_ts
from
(SELECT lbca.*
,ROW_NUMBER() OVER (partition by lbca.chain_nbr,lbca.sku_nbr
order by lbca.extract_ts desc) as row_num
from
(SELECT
 CAST(TRIM(c.chain_nbr) AS INT64) as chain_nbr
,c.sku_nbr 
,CAST(TRIM(c.uda_nbr) AS INT64) as uda_nbr
,CAST(TRIM(c.uda_value_nbr) AS INT64) as uda_value_nbr
,c.uda_value_desc 
,CAST(TRIM(c.attribute_nbr) AS NUMERIC) as attribute_nbr
,c.attribute_nm 
,c.uda_desc 
,case when TRIM(c.extract_ts)='' then null 
 else PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",TRIM(c.extract_ts),"America/New_York") end as extract_ts
 from edl_landing.lb_sku_attr_channel c
UNION ALL
SELECT
 CAST(TRIM(d.chain_nbr) AS INT64) as chain_nbr
,d.sku_nbr 
,CAST(TRIM(d.uda_nbr) AS INT64) as uda_nbr
,CAST(TRIM(d.uda_value_nbr) AS INT64) as uda_value_nbr
,d.uda_value_desc 
,CAST(TRIM(d.attribute_nbr) AS NUMERIC) as attribute_nbr
,d.attribute_nm 
,d.uda_desc 
,case when TRIM(d.extract_ts)='' then null 
 else PARSE_TIMESTAMP("%Y-%m-%d %H:%M:%S",TRIM(d.extract_ts),"America/New_York") end as extract_ts
 from edl_landing.ca_sku_attr_channel d ) lbca
) stg
where stg.row_num = 1
!
rc_check $? "Load incremental data from edl_landing into temp table"


#append the old records into the temporary table
bq query  --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.lbca_sku_attr_channel_new --use_legacy_sql=false <<!
select c.*
from edl_stage.plus_sku_attr_channel c
left join edl_stage.lbca_sku_attr_channel_new w
    on  w.chain_nbr = c.chain_nbr
    AND w.sku_nbr = c.sku_nbr
    where w.sku_nbr is null
!
rc_check $? "append legacy records into the temp table"

#cleansing and archival
bq cp --force edl_stage.plus_sku_attr_channel edl_archive.plus_sku_attr_channel
rc_check $? "archive copy"
bq cp --force edl_stage.lbca_sku_attr_channel_new edl_stage.plus_sku_attr_channel
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.lbca_sku_attr_channel_new
rc_check $? "drop the temp table"

archive_bucket_files "gs://${default_bucket}/plus/edw/lb_sku_attr_channel*.txt.gz"
archive_bucket_files "gs://${default_bucket}/plus/edw/ca_sku_attr_channel*.txt.gz"
