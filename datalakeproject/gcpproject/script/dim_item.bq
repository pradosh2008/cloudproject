#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#Load Data from staging table into analytic_mart
bq query --replace=true --max_rows 1 --allow_large_results --use_legacy_sql=false \
         --destination_table analytic_mart.dim_item_new <<!
SELECT
TO_HEX(MD5(CONCAT(  CASE 
                         WHEN a.CHAIN_ID = 4 THEN 'CA|'
                         WHEN a.CHAIN_ID = 7 THEN 'LB|'
                    END
                  , CAST(CAST(a.SKU_ID AS INT64)AS STRING))))              as item_key
, CAST(CAST(a.SKU_ID AS INT64) AS STRING)                                  as sku_id
, TO_HEX(MD5(CONCAT(  CASE 
                           WHEN a.CHAIN_ID = 4 THEN 'CA|'
                           WHEN a.CHAIN_ID = 7 THEN 'LB|'
                      END
                    , CAST(CAST(a.VENDOR_ID AS INT64)AS STRING))))         as vendor_key
, a.ITEM_DESC                                                              as item_des
, a.SHORT_DESC                                                             as item_short_des
, CAST(a.STYLE_ID AS STRING)                                               as style_id
, UPPER(a.STYLE_DESC)                                                      as style_des
, a.ITEM_DIFF_COLOR                                                        as color_cd
, UPPER(a.DIFF_COLOR_DESC)                                                 as color_des
, a.ITEM_DIFF_SIZE                                                         as size_cd
, UPPER(a.DIFF_SIZE_DESC)                                                  as size_des
, CAST(a.DEPT_ID AS STRING)                                                as department_id
, UPPER(a.DEPT_NAME)                                                       as department_nam
, CAST(a.CLASS_ID AS STRING)                                               as class_id
, UPPER(a.CLASS_NAME)                                                      as class_nam
, CAST(a.SUBCLASS_ID AS STRING)                                            as subclass_id
, UPPER(a.SUBCLASS_NAME)                                                   as subclass_nam
, CAST(a.DIVISION_ID AS STRING)                                            as division_id
, UPPER(a.DIVISION_NAME)                                                   as division_nam
, CAST(a.GROUP_NO AS STRING)                                               as group_num
, UPPER(a.GROUP_NAME)                                                      as group_nam
, a.ITEM_STATUS                                                            as item_status_cd
, a.STANDARD_UOM                                                           as standard_uom_des
, a.REGULAR_UNIT_RETAIL                                                    as regular_unit_retail_amt
, a.SELLING_UNIT_RETAIL                                                    as selling_unit_retail_amt
, case 
       when a.INVENTORY_IND = 'Y' then 1
       when a.INVENTORY_IND = 'N' then 0
       else NULL
  end                                                                      as INVENTORY_IND
, case 
       when a.MERCHANDISE_IND = 'Y' then 1
       when a.MERCHANDISE_IND = 'N' then 0
       else NULL
  end                                                                      as MERCHANDISE_IND
, case 
       when a.ORDERABLE_IND = 'Y' then 1
       when a.ORDERABLE_IND = 'N' then 0
       else NULL
  end                                                                      as ORDERABLE_IND
, case 
       when a.SELLABLE_IND = 'Y' then 1
       when a.SELLABLE_IND = 'N' then 0
       else NULL
  end                                                                      as SELLABLE_IND
, case 
       when a.SHIP_ALONE_IND = 'Y' then 1
       when a.SHIP_ALONE_IND = 'N' then 0
       else NULL
  end                                                                      as SHIP_ALONE_IND
, CAST(a.CREATE_DATETIME AS TIMESTAMP)                                     as item_create_tms
, CAST(a.LAST_UPDT_TS AS TIMESTAMP)                                        as last_update_tms
, a.UNIT_COST                                                              as unit_cost_amt
, a.ORIGIN_COUNTRY_ID                                                      as origin_country_cd
, a.record_status                                                          as item_record_status_cd
, CAST(a.season_id AS STRING)                                              as season_id
, a.season_desc                                                            as season_des
, CURRENT_TIMESTAMP                                                        as edl_create_tms
, 'Product'                                                                as edl_create_job_nam
, CURRENT_TIMESTAMP                                                        as edl_last_update_tms
, 'Product'                                                                as edl_last_update_job_nam
, case 
       when a.CHAIN_ID = 4 then "CA"
       when a.CHAIN_ID = 7 then "LB"
  end                                                                      as brand_cd
FROM (
       SELECT   *
              , ROW_NUMBER() OVER (PARTITION BY sku_id, chain_id ORDER BY batch_id DESC) as rn
       FROM edl_stage.plus_item_sku
     ) a
WHERE a.rn = 1
!
rc_check $? "Data Loaded from edl_stage to analytic_mart.dim_item_new table"

#Add legacy records from old table
bq query --max_rows 1 --allow_large_results --append_table --destination_table analytic_mart.dim_item_new --use_legacy_sql=false <<!
select
  c.item_key
, c.sku_id
, c.vendor_key
, c.item_des
, c.item_short_des
, c.style_id
, c.style_des
, c.color_cd
, c.color_des
, c.size_cd
, c.size_des
, c.department_id
, c.department_nam
, c.class_id
, c.class_nam
, c.subclass_id
, c.subclass_nam
, c.division_id
, c.division_nam
, c.group_num
, c.group_nam
, c.item_status_cd
, c.standard_uom_des
, c.regular_unit_retail_amt
, c.selling_unit_retail_amt
, c.INVENTORY_IND
, c.MERCHANDISE_IND
, c.ORDERABLE_IND
, c.SELLABLE_IND
, c.SHIP_ALONE_IND
, c.item_create_tms
, c.last_update_tms
, c.unit_cost_amt
, c.origin_country_cd
, c.item_record_status_cd
, c.season_id
, c.season_des
, c.edl_create_tms
, c.edl_create_job_nam
, c.edl_last_update_tms
, c.edl_last_update_job_nam
, c.brand_cd
from analytic_mart.dim_item c
left join analytic_mart.dim_item_new w on  w.item_key = c.item_key
where w.item_key is null
!
rc_check $? "Merged analytic_mart.dim_item to analytic_mart.dim_item_new table"

#Load data from temp table to get the latest reclassification for the old SKUs at Style Level
#And Load data from temp table to get the latest supercede data
bq query --replace=true --max_rows 1 --allow_large_results --destination_table analytic_mart.dim_item_new1 --use_legacy_sql=false <<!
SELECT
  di.item_key
, di.sku_id
, di.vendor_key
, di.item_des
, di.item_short_des
, di.style_id
, si.style_des
, di.color_cd
, di.color_des
, di.size_cd
, di.size_des
, si.department_id
, si.department_nam
, si.class_id
, si.class_nam
, si.subclass_id
, si.subclass_nam
, si.division_id
, si.division_nam
, si.group_num
, si.group_nam
, di.item_status_cd
, di.standard_uom_des
, di.regular_unit_retail_amt
, di.selling_unit_retail_amt
, di.inventory_ind
, di.merchandise_ind
, di.orderable_ind
, di.sellable_ind
, di.ship_alone_ind
, di.item_create_tms
, di.last_update_tms
, di.unit_cost_amt
, di.origin_country_cd
, di.item_record_status_cd
, case 
       when di.season_id = 'S' then '1'
       when di.season_id = 'F' then '2'
       when di.season_id = 'Y' then '3'
       else di.season_id
  end as season_id
, case 
       when di.season_id = '1' then 'S'
       when di.season_id = '2' then 'F'
       when di.season_id = '3' then 'Y'
       else di.season_id
  end as season_cd
, case 
       when di.season_id = 'S' then 'Spring'
       when di.season_id = 'F' then 'Fall'
       when di.season_id = 'Y' then 'Year Round'
       else initcap(di.season_des)
  end as season_des
, IFNULL(c.item_key,       di.item_key      ) as current_item_key
, IFNULL(b.sku_to_nbr,     di.sku_id        ) as current_sku_id
, IFNULL(c.item_des,       di.item_des      ) as current_item_des
, IFNULL(c.item_short_des, di.item_short_des) as current_item_short_des
, IFNULL(c.color_cd,       di.color_cd      ) as current_color_cd
, IFNULL(c.color_des,      di.color_des     ) as current_color_des
, IFNULL(c.size_cd,        di.size_cd       ) as current_size_cd
, IFNULL(c.size_des,       di.size_des      ) as current_size_des
, IFNULL(c.style_id,       si.style_id      ) as current_style_id
, IFNULL(c.style_des,      si.style_des     ) as current_style_des
, IFNULL(c.subclass_id,    si.subclass_id   ) as current_subclass_id
, IFNULL(c.subclass_nam,   si.subclass_nam  ) as current_subclass_nam
, di.edl_create_tms
, di.edl_create_job_nam
, di.edl_last_update_tms
, di.edl_last_update_job_nam
, di.brand_cd
FROM analytic_mart.dim_item_new di
INNER JOIN (
            SELECT
                     style_id              as style_id
                   , UPPER(style_des)      as style_des
                   , class_id              as class_id
                   , UPPER(class_nam)      as class_nam
                   , subclass_id           as subclass_id
                   , UPPER(subclass_nam)   as subclass_nam
                   , department_id         as department_id
                   , UPPER(department_nam) as department_nam
                   , group_num             as group_num
                   , UPPER(group_nam)      as group_nam
                   , division_id           as division_id
                   , UPPER(division_nam)   as division_nam
                   , brand_cd              as brand_cd
                   , last_update_tms       as last_update_tms
                   , ROW_NUMBER() OVER
                    ( PARTITION BY
                       style_id
                     , brand_cd
                      ORDER BY
                      last_update_tms desc
                    )                      as rn
            FROM analytic_mart.dim_item_new
           ) si 
                 ON  di.style_id = si.style_id
                 AND di.brand_cd = si.brand_cd
                 AND si.rn = 1
left join (
            select
              distinct
              chain_nbr
            , sku_to_nbr
            , sku_from_nbr
            , case 
                   when chain_nbr = 7 then 'LB' 
                   else 'CA' 
              end brand_cd
            , last_update_ts
            from edl_stage.plus_forecasting_replen_supercede_swap x
            join (
                   select 
                   max(last_update_ts) as max_last_update_ts 
                   from  edl_stage.plus_forecasting_replen_supercede_swap
                 ) y 
                     on x.last_update_ts = y.max_last_update_ts
          ) b 
              on  di.sku_id   = b.sku_from_nbr
              and di.brand_cd = b.brand_cd
left join (
             select 
               di1.item_key
             , di1.sku_id
             , di1.brand_cd
             , di1.item_des     
             , di1.item_short_des
             , di1.color_cd
             , di1.color_des
             , di1.size_cd
             , di1.size_des
             , si1.style_id
             , si1.style_des
             , si1.subclass_id
             , si1.subclass_nam
             from analytic_mart.dim_item_new di1
             INNER JOIN (
                         SELECT
                            style_id              as style_id
                          , UPPER(style_des)      as style_des
                          , class_id              as class_id
                          , UPPER(class_nam)      as class_nam
                          , subclass_id           as subclass_id
                          , UPPER(subclass_nam)   as subclass_nam
                          , department_id         as department_id
                          , UPPER(department_nam) as department_nam
                          , group_num             as group_num
                          , UPPER(group_nam)      as group_nam
                          , division_id           as division_id
                          , UPPER(division_nam)   as division_nam
                          , brand_cd              as brand_cd
                          , last_update_tms       as last_update_tms
                          , ROW_NUMBER() OVER
                           ( PARTITION BY
                              style_id
                            , brand_cd
                             ORDER BY
                             last_update_tms desc
                           )                      as rn
                         FROM analytic_mart.dim_item_new
                        ) si1  ON  di1.style_id = si1.style_id
                               AND di1.brand_cd = si1.brand_cd
                               AND si1.rn = 1
          ) c 
              on  b.sku_to_nbr = c.sku_id
              and b.brand_cd   = c.brand_cd
!
rc_check $? "Corrected Hierarchy and latest Supercede Data added in analytic_mart.dim_item_new1 Table"

#COPY DATA FROM ACTUAL TABLE
bq cp --force analytic_mart.dim_item edl_archive.dim_item
rc_check $? "Archive copy"
bq cp --force analytic_mart.dim_item_new1 analytic_mart.dim_item
rc_check $? "Copy new table "
bq rm --force analytic_mart.dim_item_new1
rc_check $? "Remove new1 table "
bq rm --force analytic_mart.dim_item_new
rc_check $? "Remove new table "



