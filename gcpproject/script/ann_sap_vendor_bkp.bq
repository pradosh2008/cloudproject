#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

bq load --replace=true --source_format=CSV --field_delimiter="|" \
        --schema=${schema_path}/edl_landing/ann_sap_vendor.json \
        edl_landing.ann_sap_vendor "gs://${default_bucket}/pre/sapwm/ANN_SAP_VENDOR_*.dat"
rc_check $? "Load edl_landing"


#loading the temporary table in staging 

bq query  --max_rows 1 --allow_large_results --destination_table edl_stage.ann_sap_vendor_new --use_legacy_sql=false <<!
SELECT date_time
    ,vendor_number
    ,vendor_name
    ,batch_id
from edl_landing.ann_sap_vendor 
where vendor_number is not null
!
rc_check $? "Load incremental data from edl_landing into temp table"

#append the old records into the temporary table

bq query --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.ann_sap_vendor_new --use_legacy_sql=false <<!
select c.*
from edl_stage.pre_sap_vendor c
WHERE c.batch_id NOT IN (
  SELECT
    w.batch_id
  FROM
    edl_stage.ann_sap_vendor_new w
    group by w.batch_id
)
!
rc_check $? "append legacy records into the temp table"

#cleansing and archival
bq cp --force edl_stage.pre_sap_vendor edl_archive.pre_sap_vendor
rc_check $? "archive copy"
bq cp --force edl_stage.ann_sap_vendor_new edl_stage.pre_sap_vendor
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.ann_sap_vendor_new
rc_check $? "drop the temp table"

archive_bucket_files "gs://${default_bucket}/pre/sapwm/ANN_SAP_VENDOR_*.dat"













































