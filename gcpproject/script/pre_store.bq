#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#one time load
#bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --destination_table analytic_mart.pre_store --use_legacy_sql=false <<!
#SELECT
#FARM_FINGERPRINT(CAST(ls.store_nbr AS STRING)) as store_key
#, CAST(ls.store_nbr AS STRING) as store_id
#, CASE WHEN ls.brand_cd = 'AT' THEN 'ATS' ELSE ls.brand_cd END as brand_cd
#, CASE WHEN ls.store_status_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.store_status_cd END AS store_status_cd
#, CASE WHEN ls.store_status_cd = 'C' THEN 'CLOSED' WHEN ls.store_status_cd = 'O' THEN 'OPEN' ELSE NULL END as store_status_des
#, ls.store_nm as store_nam
#, ls.store_address_1 as store_address_1_des
#, ls.store_address_2 as store_address_2_des
#, ls.store_city as store_city_nam
#, ls.store_state as store_state_cd
#, ls.store_postal_cd as store_postal_cd
#, ls.store_country_cd as store_country_cd
#, ls.store_latitude as store_latitude_num
#, ls.store_longitude as store_longitude_num
#, CASE WHEN ls.region_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.region_cd END AS region_cd
#, ls.region_desc as region_des
#, CASE WHEN ls.district_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.district_cd END AS district_cd
#, ls.district_desc as district_des
#, ls.tax_jurisdiction as tax_jurisdiction_num
#, CASE WHEN ls.title_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.title_cd END AS title_cd
#, ls.title_desc as title_des
#, ls.title_person as title_person_nam
#, ls.regional_vp_nm as regional_vp_nam
#, ls.district_mgr_nm as district_manager_nam
#, ls.store_mgr_nm as store_manager_nam
#, CAST(ls.total_area as INT64) AS total_area_num
#, CAST(ls.sales_area as INT64) AS sales_area_num
#, CAST(NULL as STRING) AS sales_area_unit_cd
#, CAST(NULL as STRING) AS selling_des
#, cast(ls.selling_ind as int64) selling_ind
#, CAST(ls.store_open_dt AS DATE) as store_open_dt
#, CAST(ls.store_close_dt AS DATE) as store_close_dt
#, ls.climate as climate_des
#, ls.location as location_des
#, ls.secondary_location as secondary_location_des
#, ls.rov as rov_des
#, CASE WHEN ls.tier = '~' THEN CAST(NULL AS STRING) ELSE ls.tier END AS tier_num
#, CASE WHEN ls.volume = '~' THEN CAST(NULL AS STRING) ELSE ls.volume END AS volume_cd
#, CASE WHEN ls.sales_org_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.sales_org_cd END AS sales_org_cd
#, CASE WHEN ls.company_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.company_cd END AS company_cd
#, CASE WHEN ls.distribution_channel_cd = '~' THEN CAST(NULL AS STRING) ELSE ls.distribution_channel_cd END AS distribution_channel_cd
#, ls.store_phone_nbr as store_phone_num
#, CAST(NULL AS STRING) as store_time_zone_cd
#, 20160101 as batch_id  
#FROM edl_stage.pre_lu_store_vw as ls 
#!
#
#rc_check $? "One time history load to mart"

#loading the temporary table in staging (it has new records)
bq query --max_rows 1 --allow_large_results --destination_table edl_stage.pre_store --use_legacy_sql=false <<!
SELECT
FARM_FINGERPRINT(CAST(CAST(store_no AS INT64) AS STRING)) as store_key
, CAST(CAST(store_no AS INT64) AS STRING) as store_id
, dc.brand_cd
, search_term1 as store_status_des
, CASE WHEN TRIM(search_term1) = 'OPEN' THEN 'O' WHEN TRIM(search_term1) LIKE 'CLOSED%' THEN 'C' ELSE NULL END as store_status_cd
, store_name as store_nam
, street as store_address_1_des
, CAST(NULL as STRING) AS store_address_2_des
, city as store_city_nam
, state as store_state_cd
, zipcode as store_postal_cd
, country as store_country_cd
, CAST(NULL as STRING) AS store_latitude_num
, CAST(NULL as STRING) AS store_longitude_num
, region as region_cd
, region_desc as region_des
, district as district_cd
, district_desc as district_des
, tax_jurisdiction as tax_jurisdiction_num
, title_value as title_cd
, title_desc as title_des
, name as title_person_nam
, regional_vise_president as regional_vp_nam
, district_manager as district_manager_nam
, store_manager as store_manager_nam
, CAST(tot_sq_ft AS INT64)as total_area_num
, CAST(sales_area AS INT64) as sales_area_num
, sales_area_unit as sales_area_unit_cd
, search_term2 as selling_des
, CASE WHEN search_term2 = 'SELLING' THEN 1 ELSE 0 END AS selling_ind
, CASE WHEN CAST(opening_date AS INT64) = 0 THEN NULL ELSE PARSE_DATE('%Y%m%d',opening_date) END as store_open_dt
, CASE WHEN CAST(closing_date AS INT64) = 0 THEN NULL ELSE PARSE_DATE('%Y%m%d',closing_date) END as store_close_dt
, climate as climate_des
, location as location_des
, secondary_location as secondary_location_des
, rov as rov_des
, tier as tier_num
, volume as volume_cd 
, sales_org as sales_org_cd
, company_code as company_cd
, distribution_channel as distribution_channel_cd
, store_phone_nbr as store_phone_num
, store_time_zone as store_time_zone_cd
, batch_id  
FROM (
SELECT * FROM (
                SELECT *, row_number() OVER (PARTITION BY store_no ORDER BY batch_id desc) as rn FROM edl_stage.pre_sap_store
            )
WHERE rn = 1 ) ss
join analytic_mart.pre_distribution_channel dc
on dc.distribution_channel_id = ss.distribution_channel 
WHERE store_no NOT LIKE 'A%' AND store_no NOT LIKE 'R%'
UNION ALL
SELECT
FARM_FINGERPRINT(store_no) as store_key
, store_no as store_id
, dc.brand_cd
, search_term1 as store_status_des
, CASE WHEN TRIM(search_term1) = 'OPEN' THEN 'O' WHEN TRIM(search_term1) LIKE 'CLOSED%' THEN 'C' ELSE NULL END as store_status_cd
, store_name as store_nam
, street as store_address_1_des
, CAST(NULL as STRING) AS store_address_2_des
, city as store_city_nam
, state as store_state_cd
, zipcode as store_postal_cd
, country as store_country_cd
, CAST(NULL as STRING) AS store_latitude_num
, CAST(NULL as STRING) AS store_longitude_num
, region as region_cd
, region_desc as region_des
, district as district_cd
, district_desc as district_des
, tax_jurisdiction as tax_jurisdiction_num
, title_value as title_cd
, title_desc as title_des
, name as title_person_nam
, regional_vise_president as regional_vp_nam
, district_manager as district_manager_nam
, store_manager as store_manager_nam
, CAST(tot_sq_ft AS INT64)as total_area_num
, CAST(sales_area AS INT64) as sales_area_num
, sales_area_unit as sales_area_unit_cd
, search_term2 as selling_des
, CASE WHEN search_term2 = 'SELLING' THEN 1 ELSE 0 END AS selling_ind
, CASE WHEN CAST(opening_date AS INT64) = 0 THEN NULL ELSE PARSE_DATE('%Y%m%d',opening_date) END as store_open_dt
, CASE WHEN CAST(closing_date AS INT64) = 0 THEN NULL ELSE PARSE_DATE('%Y%m%d',closing_date) END as store_close_dt
, climate as climate_des
, location as location_des
, secondary_location as secondary_location_des
, rov as rov_des
, tier as tier_num
, volume as volume_cd 
, sales_org as sales_org_cd
, company_code as company_cd
, distribution_channel as distribution_channel_cd
, store_phone_nbr as store_phone_num
, store_time_zone as store_time_zone_cd
, batch_id  
FROM (
SELECT * FROM (
                SELECT *, row_number() OVER (PARTITION BY store_no ORDER BY batch_id desc) as rn FROM edl_stage.pre_sap_store
            )
WHERE rn = 1 ) ss
join analytic_mart.pre_distribution_channel dc
on dc.distribution_channel_id = ss.distribution_channel 
WHERE store_no LIKE 'A%' OR store_no LIKE 'R%'
!
rc_check $? "Load incremental pre_sap_store data from edl_stage table into temp table"

#load edl_stage.pre_style to temporary table for incremental load
bq query --max_rows 1 --allow_large_results --destination_table analytic_mart.pre_store_new --use_legacy_sql=false <<!
SELECT * FROM edl_stage.pre_store
!
rc_check $? "Load new data into analytic_mart pre_store_new table"

#append the old records into the temporary table
bq query --max_rows 1 --allow_large_results --append_table --destination_table analytic_mart.pre_store_new --use_legacy_sql=false <<!
select c.*
from analytic_mart.pre_store c
left join edl_stage.pre_store w
    on  w.store_id = c.store_id
        where w.store_id is null
!
rc_check $? "append old data to temp table which has incremental data"

#cleansing and archival
bq cp --force analytic_mart.pre_store edl_archive.pre_store
rc_check $? "archive copy"
bq cp --force analytic_mart.pre_store_new analytic_mart.pre_store
rc_check $? "replace the temp table as the actual table"
bq rm --force analytic_mart.pre_store_new
rc_check $? "drop the temp table in analytic_mart"
bq rm --force edl_stage.pre_store
rc_check $? "drop the temp table in stage"
