#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#creating the landing table
bq load --replace=true --source_format=AVRO --use_avro_logical_types=true edl_landing.ann_ann_sap_exchrate  'gs://p-asna-datasink-003/ann_ann_sap_exchrate/*'
rc_check $? "Load edl_landing"

#loading the temporary table in staging (it has both new and updated records)
bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --destination_table edl_stage.ann_ann_sap_exchrate_new --use_legacy_sql=false <<!
SELECT c.* from edl_landing.ann_ann_sap_exchrate c
!
rc_check $? "Load incremental data from edl_landing into temp table"

#append the old records into the temporary table
bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.ann_ann_sap_exchrate_new --use_legacy_sql=false <<!
select c.*
from edl_stage.pre_sap_exchrate c
left join edl_landing.ann_ann_sap_exchrate w
    on  w.gdatu_inv = c.gdatu_inv 
    and w.fcurr_curr = c.fcurr_curr
    and w.batch_id = c.batch_id
    where w.gdatu_inv is null
!
rc_check $? "append legacy records into the temp table"

#cleansing and archival
bq cp --force edl_stage.pre_sap_exchrate edl_archive.pre_sap_exchrate
rc_check $? "archive copy"
bq cp --force edl_stage.ann_ann_sap_exchrate_new edl_stage.pre_sap_exchrate
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.ann_ann_sap_exchrate_new
rc_check $? "drop the temp table"