#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh


#loading the temporary table in analytic_mart to perform incremental operations
bq query  --max_rows 1 --allow_large_results --replace --destination_table analytic_mart.fact_transaction_notes_new --use_legacy_sql=false <<!
select b.transaction_key
      ,b.transaction_notes_line_num
      ,b.transaction_notes_sequence_num
      ,b.note_type_desc
      ,b.free_form_notes_desc
      ,b.edl_create_tms
      ,b.edl_create_job_nam
      ,b.edl_last_update_tms
      ,b.edl_last_update_job_nam
      ,b.brand_cd
from
(
SELECT
  TO_HEX( MD5( CONCAT(CASE
          WHEN stn.selling_chain_nbr = 4 THEN 'CA|'
          WHEN stn.selling_chain_nbr = 7 THEN 'LB|' END ,"|"
        ,stn.selling_store_nbr,"|",stn.register_nbr,"|",stn.transaction_dt,"|",stn.transaction_nbr ))) AS transaction_key,
  cast(stn.detail_fee_seq_nbr as INT64) AS transaction_notes_line_num,
  cast(stn.notes_seq_nbr as INT64) AS transaction_notes_sequence_num,
  stn.note_type_desc AS note_type_desc,
  stn.free_form_note_desc as free_form_notes_desc,
  CURRENT_TIMESTAMP AS edl_create_tms,
  'TRANS' AS edl_create_job_nam,
  CURRENT_TIMESTAMP AS edl_last_update_tms,
  'TRANS' AS edl_last_update_job_nam,
  CASE
    WHEN stn.selling_chain_nbr = 4 THEN 'CA'
    WHEN stn.selling_chain_nbr = 7 THEN 'LB'
END
  AS brand_cd
FROM
  edl_stage.plus_sales_transaction_notes stn
) b
!
rc_check $? "Loading mart transaction notes table"



bq query  --max_rows 1 --allow_large_results --append_table --destination_table analytic_mart.fact_transaction_notes_new --use_legacy_sql=false <<!
select c.*
from analytic_mart.fact_transaction_notes c
left join analytic_mart.fact_transaction_notes_new w
    on  w.transaction_key = c.transaction_key
    and w.transaction_notes_line_num = c.transaction_notes_line_num
    and w.transaction_notes_sequence_num = c.transaction_notes_sequence_num
    and w.brand_cd = c.brand_cd
where w.transaction_key is null
!
rc_check $? "append legacy records into the temp table"


#cleansing and archival
bq cp --force analytic_mart.fact_transaction_notes edl_archive.fact_transaction_notes
rc_check $? "archive copy"
bq cp --force analytic_mart.fact_transaction_notes_new analytic_mart.fact_transaction_notes
rc_check $? "replace the temp table as the analytic_mart table"
bq rm --force analytic_mart.fact_transaction_notes_new
rc_check $? "drop the temp table"
