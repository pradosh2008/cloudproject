#!/usr/bin/bash

. ${HOME}/lib/set_env.sh
. ${HOME}/lib/common.sh

#creating the landing table
bq load --replace=true --source_format=AVRO --use_avro_logical_types=true edl_landing.ann_ann_aw_transactions_taxdetail  'gs://p-asna-datasink-003/ann_ann_aw_transactions_taxdetail/*'
rc_check $? "Load edl_landing"

#loading the temporary table in staging ( it has both new and updated records)
bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --destination_table edl_stage.ann_ann_aw_transactions_taxdetail_new --use_legacy_sql=false <<!
SELECT c.* from edl_landing.ann_ann_aw_transactions_taxdetail c
!
rc_check $? "Load incremental data from edl_landing into temp table"

#append the old records into the temporary table
bq query --project_id='p-asna-analytics-002' --max_rows 1 --allow_large_results --append_table --destination_table edl_stage.ann_ann_aw_transactions_taxdetail_new --use_legacy_sql=false <<!
select c.*
from edl_stage.pre_aw_transaction_tax_detail c
left join edl_landing.ann_ann_aw_transactions_taxdetail w
    on  w.if_entry_no = c.if_entry_no
    AND w.line_id = c.line_id
    AND w.tax_level = c.tax_level
    where w.if_entry_no is null
!

rc_check $? "append legacy records into the temp table"

#cleansing and archival
bq cp --force edl_stage.pre_aw_transaction_tax_detail edl_archive.pre_aw_transaction_tax_detail
rc_check $? "archive copy"
bq cp --force edl_stage.ann_ann_aw_transactions_taxdetail_new edl_stage.pre_aw_transaction_tax_detail
rc_check $? "replace the temp table as the stage table"
bq rm --force edl_stage.ann_ann_aw_transactions_taxdetail_new
rc_check $? "drop the temp table"


